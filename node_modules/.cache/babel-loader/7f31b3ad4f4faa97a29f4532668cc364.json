{"ast":null,"code":"import React from'react';import{Table}from'semantic-ui-react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var QNA=function QNA(_ref){var questionsAndAnswers=_ref.questionsAndAnswers;return/*#__PURE__*/_jsxs(Table,{celled:true,striped:true,selectable:true,size:\"large\",children:[/*#__PURE__*/_jsx(Table.Header,{children:/*#__PURE__*/_jsxs(Table.Row,{children:[/*#__PURE__*/_jsx(Table.HeaderCell,{children:\"No.\"}),/*#__PURE__*/_jsx(Table.HeaderCell,{children:\"Questions\"}),/*#__PURE__*/_jsx(Table.HeaderCell,{children:\"Your Answers\"}),/*#__PURE__*/_jsx(Table.HeaderCell,{children:\"Correct Answers\"}),/*#__PURE__*/_jsx(Table.HeaderCell,{children:\"Points\"})]})}),/*#__PURE__*/_jsx(Table.Body,{children:questionsAndAnswers.map(function(item,i){return/*#__PURE__*/_jsxs(Table.Row,{children:[/*#__PURE__*/_jsx(Table.Cell,{children:i+1}),/*#__PURE__*/_jsx(Table.Cell,{children:item.question}),/*#__PURE__*/_jsx(Table.Cell,{children:item.user_answer}),/*#__PURE__*/_jsx(Table.Cell,{children:item.correct_answer}),/*#__PURE__*/_jsx(Table.Cell,{children:item.point})]},i+1);})})]});};export default QNA;","map":{"version":3,"sources":["C:/Users/91912/OneDrive/Documents/toDElete/quiz-app/src/components/Result/QNA.js"],"names":["React","Table","QNA","questionsAndAnswers","map","item","i","question","user_answer","correct_answer","point"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,OAASC,KAAT,KAAsB,mBAAtB,C,wFAEA,GAAMC,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,MAA6B,IAA1BC,CAAAA,mBAA0B,MAA1BA,mBAA0B,CACvC,mBACE,MAAC,KAAD,EAAO,MAAM,KAAb,CAAc,OAAO,KAArB,CAAsB,UAAU,KAAhC,CAAiC,IAAI,CAAC,OAAtC,wBACE,KAAC,KAAD,CAAO,MAAP,wBACE,MAAC,KAAD,CAAO,GAAP,yBACE,KAAC,KAAD,CAAO,UAAP,kBADF,cAEE,KAAC,KAAD,CAAO,UAAP,wBAFF,cAGE,KAAC,KAAD,CAAO,UAAP,2BAHF,cAIE,KAAC,KAAD,CAAO,UAAP,8BAJF,cAKE,KAAC,KAAD,CAAO,UAAP,qBALF,GADF,EADF,cAUE,KAAC,KAAD,CAAO,IAAP,WACGA,mBAAmB,CAACC,GAApB,CAAwB,SAACC,IAAD,CAAOC,CAAP,qBACvB,MAAC,KAAD,CAAO,GAAP,yBACE,KAAC,KAAD,CAAO,IAAP,WAAaA,CAAC,CAAG,CAAjB,EADF,cAEE,KAAC,KAAD,CAAO,IAAP,WAAaD,IAAI,CAACE,QAAlB,EAFF,cAGE,KAAC,KAAD,CAAO,IAAP,WAAaF,IAAI,CAACG,WAAlB,EAHF,cAIE,KAAC,KAAD,CAAO,IAAP,WAAaH,IAAI,CAACI,cAAlB,EAJF,cAKE,KAAC,KAAD,CAAO,IAAP,WAAaJ,IAAI,CAACK,KAAlB,EALF,GAAgBJ,CAAC,CAAG,CAApB,CADuB,EAAxB,CADH,EAVF,GADF,CAwBD,CAzBD,CA+BA,cAAeJ,CAAAA,GAAf","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Table } from 'semantic-ui-react';\r\n\r\nconst QNA = ({ questionsAndAnswers }) => {\r\n  return (\r\n    <Table celled striped selectable size=\"large\">\r\n      <Table.Header>\r\n        <Table.Row>\r\n          <Table.HeaderCell>No.</Table.HeaderCell>\r\n          <Table.HeaderCell>Questions</Table.HeaderCell>\r\n          <Table.HeaderCell>Your Answers</Table.HeaderCell>\r\n          <Table.HeaderCell>Correct Answers</Table.HeaderCell>\r\n          <Table.HeaderCell>Points</Table.HeaderCell>\r\n        </Table.Row>\r\n      </Table.Header>\r\n      <Table.Body>\r\n        {questionsAndAnswers.map((item, i) => (\r\n          <Table.Row key={i + 1}>\r\n            <Table.Cell>{i + 1}</Table.Cell>\r\n            <Table.Cell>{item.question}</Table.Cell>\r\n            <Table.Cell>{item.user_answer}</Table.Cell>\r\n            <Table.Cell>{item.correct_answer}</Table.Cell>\r\n            <Table.Cell>{item.point}</Table.Cell>\r\n          </Table.Row>\r\n        ))}\r\n      </Table.Body>\r\n    </Table>\r\n  );\r\n};\r\n\r\nQNA.propTypes = {\r\n  questionsAndAnswers: PropTypes.array.isRequired\r\n};\r\n\r\nexport default QNA;\r\n"]},"metadata":{},"sourceType":"module"}