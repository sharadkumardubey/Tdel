{"ast":null,"code":"import _slicedToArray from\"C:/Users/91912/OneDrive/Documents/toDElete/quiz-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{Container,Segment,Item,Divider,Button,Icon,Message,Menu,Header}from'semantic-ui-react';import he from'he';import Countdown from'../Countdown';import{getLetter}from'../../utils';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Quiz=function Quiz(_ref){var data=_ref.data,countdownTime=_ref.countdownTime,endQuiz=_ref.endQuiz;var _useState=useState(0),_useState2=_slicedToArray(_useState,2),questionIndex=_useState2[0],setQuestionIndex=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),correctAnswers=_useState4[0],setCorrectAnswers=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),userSlectedAns=_useState6[0],setUserSlectedAns=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),questionsAndAnswers=_useState8[0],setQuestionsAndAnswers=_useState8[1];var _useState9=useState(null),_useState10=_slicedToArray(_useState9,2),timeTaken=_useState10[0],setTimeTaken=_useState10[1];var handleItemClick=function handleItemClick(e,_ref2){var name=_ref2.name;setUserSlectedAns(name);};var handleNext=function handleNext(){var point=0;if(userSlectedAns===he.decode(data[questionIndex].correct_answer)){point=1;}var qna=questionsAndAnswers;qna.push({question:he.decode(data[questionIndex].question),user_answer:userSlectedAns,correct_answer:he.decode(data[questionIndex].correct_answer),point:point});if(questionIndex===data.length-1){return endQuiz({totalQuestions:data.length,correctAnswers:correctAnswers+point,timeTaken:timeTaken,questionsAndAnswers:qna});}setCorrectAnswers(correctAnswers+point);setQuestionIndex(questionIndex+1);setUserSlectedAns(null);setQuestionsAndAnswers(qna);};var timeOver=function timeOver(timeTaken){return endQuiz({totalQuestions:data.length,correctAnswers:correctAnswers,timeTaken:timeTaken,questionsAndAnswers:questionsAndAnswers});};return/*#__PURE__*/_jsx(Item.Header,{children:/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(Segment,{children:/*#__PURE__*/_jsx(Item.Group,{divided:true,children:/*#__PURE__*/_jsx(Item,{children:/*#__PURE__*/_jsxs(Item.Content,{children:[/*#__PURE__*/_jsxs(Item.Extra,{children:[/*#__PURE__*/_jsxs(Header,{as:\"h1\",block:true,floated:\"left\",children:[/*#__PURE__*/_jsx(Icon,{name:\"info circle\"}),/*#__PURE__*/_jsx(Header.Content,{children:\"Question No.\".concat(questionIndex+1,\" of \").concat(data.length)})]}),/*#__PURE__*/_jsx(Countdown,{countdownTime:countdownTime,timeOver:timeOver,setTimeTaken:setTimeTaken})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(Item.Meta,{children:[/*#__PURE__*/_jsx(Message,{size:\"huge\",floating:true,children:/*#__PURE__*/_jsx(\"b\",{children:\"Q. \".concat(he.decode(data[questionIndex].question))})}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(Item.Description,{children:/*#__PURE__*/_jsx(\"h3\",{children:\"Please choose one of the following answers:\"})}),/*#__PURE__*/_jsx(Divider,{}),/*#__PURE__*/_jsx(Menu,{vertical:true,fluid:true,size:\"massive\",children:data[questionIndex].options.map(function(option,i){var letter=getLetter(i);var decodedOption=he.decode(option);return/*#__PURE__*/_jsxs(Menu.Item,{name:decodedOption,active:userSlectedAns===decodedOption,onClick:handleItemClick,children:[/*#__PURE__*/_jsx(\"b\",{style:{marginRight:'8px'},children:letter}),decodedOption]},decodedOption);})})]}),/*#__PURE__*/_jsx(Divider,{}),/*#__PURE__*/_jsx(Item.Extra,{children:/*#__PURE__*/_jsx(Button,{primary:true,content:\"Next\",onClick:handleNext,floated:\"right\",size:\"big\",icon:\"right chevron\",labelPosition:\"right\",disabled:!userSlectedAns})})]})})})}),/*#__PURE__*/_jsx(\"br\",{})]})});};export default Quiz;","map":{"version":3,"sources":["C:/Users/91912/OneDrive/Documents/toDElete/quiz-app/src/components/Quiz/index.js"],"names":["React","useState","Container","Segment","Item","Divider","Button","Icon","Message","Menu","Header","he","Countdown","getLetter","Quiz","data","countdownTime","endQuiz","questionIndex","setQuestionIndex","correctAnswers","setCorrectAnswers","userSlectedAns","setUserSlectedAns","questionsAndAnswers","setQuestionsAndAnswers","timeTaken","setTimeTaken","handleItemClick","e","name","handleNext","point","decode","correct_answer","qna","push","question","user_answer","length","totalQuestions","timeOver","options","map","option","i","letter","decodedOption","marginRight"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Container,\r\n  Segment,\r\n  Item,\r\n  Divider,\r\n  Button,\r\n  Icon,\r\n  Message,\r\n  Menu,\r\n  Header\r\n} from 'semantic-ui-react';\r\nimport he from 'he';\r\n\r\nimport Countdown from '../Countdown';\r\nimport { getLetter } from '../../utils';\r\n\r\nconst Quiz = ({ data, countdownTime, endQuiz }) => {\r\n\r\n  const [questionIndex, setQuestionIndex] = useState(0);\r\n  const [correctAnswers, setCorrectAnswers] = useState(0);\r\n  const [userSlectedAns, setUserSlectedAns] = useState(null);\r\n  const [questionsAndAnswers, setQuestionsAndAnswers] = useState([]);\r\n  const [timeTaken, setTimeTaken] = useState(null);\r\n\r\n  const handleItemClick = (e, { name }) => {\r\n    setUserSlectedAns(name);\r\n  };\r\n\r\n  const handleNext = () => {\r\n    let point = 0;\r\n    if (userSlectedAns === he.decode(data[questionIndex].correct_answer)) {\r\n      point = 1;\r\n    }\r\n\r\n    const qna = questionsAndAnswers;\r\n    qna.push({\r\n      question: he.decode(data[questionIndex].question),\r\n      user_answer: userSlectedAns,\r\n      correct_answer: he.decode(data[questionIndex].correct_answer),\r\n      point\r\n    });\r\n\r\n    if (questionIndex === data.length - 1) {\r\n      return endQuiz({\r\n        totalQuestions: data.length,\r\n        correctAnswers: correctAnswers + point,\r\n        timeTaken,\r\n        questionsAndAnswers: qna\r\n      });\r\n    }\r\n\r\n    setCorrectAnswers(correctAnswers + point);\r\n    setQuestionIndex(questionIndex + 1);\r\n    setUserSlectedAns(null);\r\n    setQuestionsAndAnswers(qna);\r\n  };\r\n\r\n  const timeOver = timeTaken => {\r\n    return endQuiz({\r\n      totalQuestions: data.length,\r\n      correctAnswers,\r\n      timeTaken,\r\n      questionsAndAnswers\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Item.Header>\r\n      <Container>\r\n        <Segment>\r\n          <Item.Group divided>\r\n            <Item>\r\n              <Item.Content>\r\n                <Item.Extra>\r\n                  <Header as=\"h1\" block floated=\"left\">\r\n                    <Icon name=\"info circle\" />\r\n                    <Header.Content>\r\n                      {`Question No.${questionIndex + 1} of ${data.length}`}\r\n                    </Header.Content>\r\n                  </Header>\r\n                  <Countdown\r\n                    countdownTime={countdownTime}\r\n                    timeOver={timeOver}\r\n                    setTimeTaken={setTimeTaken}\r\n                  />\r\n                </Item.Extra>\r\n                <br />\r\n                <Item.Meta>\r\n                  <Message size=\"huge\" floating>\r\n                    <b>{`Q. ${he.decode(data[questionIndex].question)}`}</b>\r\n                  </Message>\r\n                  <br />\r\n                  <Item.Description>\r\n                    <h3>Please choose one of the following answers:</h3>\r\n                  </Item.Description>\r\n                  <Divider />\r\n                  <Menu vertical fluid size=\"massive\">\r\n                    {data[questionIndex].options.map((option, i) => {\r\n                      const letter = getLetter(i);\r\n                      const decodedOption = he.decode(option);\r\n\r\n                      return (\r\n                        <Menu.Item\r\n                          key={decodedOption}\r\n                          name={decodedOption}\r\n                          active={userSlectedAns === decodedOption}\r\n                          onClick={handleItemClick}\r\n                        >\r\n                          <b style={{ marginRight: '8px' }}>{letter}</b>\r\n                          {decodedOption}\r\n                        </Menu.Item>\r\n                      );\r\n                    })}\r\n                  </Menu>\r\n                </Item.Meta>\r\n                <Divider />\r\n                <Item.Extra>\r\n                  <Button\r\n                    primary\r\n                    content=\"Next\"\r\n                    onClick={handleNext}\r\n                    floated=\"right\"\r\n                    size=\"big\"\r\n                    icon=\"right chevron\"\r\n                    labelPosition=\"right\"\r\n                    disabled={!userSlectedAns}\r\n                  />\r\n                </Item.Extra>\r\n              </Item.Content>\r\n            </Item>\r\n          </Item.Group>\r\n        </Segment>\r\n        <br />\r\n      </Container>\r\n    </Item.Header>\r\n  );\r\n};\r\n\r\nQuiz.propTypes = {\r\n  data: PropTypes.array.isRequired,\r\n  countdownTime: PropTypes.number.isRequired,\r\n  endQuiz: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Quiz;\r\n"]},"metadata":{},"sourceType":"module"}