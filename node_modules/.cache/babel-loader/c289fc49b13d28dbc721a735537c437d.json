{"ast":null,"code":"import _toConsumableArray from\"C:/Users/91912/OneDrive/Documents/toDElete/quiz-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _defineProperty from\"C:/Users/91912/OneDrive/Documents/toDElete/quiz-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"C:/Users/91912/OneDrive/Documents/toDElete/quiz-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:/Users/91912/OneDrive/Documents/toDElete/quiz-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{Container,Segment,Item,Dropdown,Divider,Button,Message}from'semantic-ui-react';import mindImg from\"../../images/mind.svg\";import{CATEGORIES,NUM_OF_QUESTIONS,DIFFICULTY,QUESTIONS_TYPE,COUNTDOWN_TIME}from'../../constants';import{shuffle}from'../../utils';import Offline from'../Offline';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Main=function Main(_ref){var startQuiz=_ref.startQuiz;var _useState=useState('0'),_useState2=_slicedToArray(_useState,2),category=_useState2[0],setCategory=_useState2[1];var _useState3=useState(5),_useState4=_slicedToArray(_useState3,2),numOfQuestions=_useState4[0],setNumOfQuestions=_useState4[1];var _useState5=useState('0'),_useState6=_slicedToArray(_useState5,2),difficulty=_useState6[0],setDifficulty=_useState6[1];var _useState7=useState('0'),_useState8=_slicedToArray(_useState7,2),questionsType=_useState8[0],setQuestionsType=_useState8[1];var _useState9=useState({hours:0,minutes:120,seconds:0}),_useState10=_slicedToArray(_useState9,2),countdownTime=_useState10[0],setCountdownTime=_useState10[1];var _useState11=useState(false),_useState12=_slicedToArray(_useState11,2),processing=_useState12[0],setProcessing=_useState12[1];var _useState13=useState(null),_useState14=_slicedToArray(_useState13,2),error=_useState14[0],setError=_useState14[1];var _useState15=useState(false),_useState16=_slicedToArray(_useState15,2),offline=_useState16[0],setOffline=_useState16[1];var handleTimeChange=function handleTimeChange(e,_ref2){var name=_ref2.name,value=_ref2.value;setCountdownTime(_objectSpread(_objectSpread({},countdownTime),{},_defineProperty({},name,value)));};var allFieldsSelected=false;if(category&&numOfQuestions&&difficulty&&questionsType&&(countdownTime.hours||countdownTime.minutes||countdownTime.seconds)){allFieldsSelected=true;}var fetchData=function fetchData(){setProcessing(true);if(error)setError(null);var API=\"https://opentdb.com/api.php?amount=\".concat(numOfQuestions,\"&category=\").concat(category,\"&difficulty=\").concat(difficulty,\"&type=\").concat(questionsType);fetch(API).then(function(respone){return respone.json();}).then(function(data){return setTimeout(function(){var response_code=data.response_code,results=data.results;if(response_code===1){var message=/*#__PURE__*/_jsxs(\"p\",{children:[\"The API doesn't have enough questions for your query. (Ex. Asking for 50 Questions in a Category that only has 20.)\",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),\"Please change the \",/*#__PURE__*/_jsx(\"strong\",{children:\"No. of Questions\"}),\",\",' ',/*#__PURE__*/_jsx(\"strong\",{children:\"Difficulty Level\"}),\", or\",' ',/*#__PURE__*/_jsx(\"strong\",{children:\"Type of Questions\"}),\".\"]});setProcessing(false);setError({message:message});return;}results.forEach(function(element){element.options=shuffle([element.correct_answer].concat(_toConsumableArray(element.incorrect_answers)));});setProcessing(false);startQuiz(results,countdownTime.hours+countdownTime.minutes+countdownTime.seconds);},1000);}).catch(function(error){return setTimeout(function(){if(!navigator.onLine){setOffline(true);}else{setProcessing(false);setError(error);}},1000);});};if(offline)return/*#__PURE__*/_jsx(Offline,{});return/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(Segment,{children:/*#__PURE__*/_jsx(Item.Group,{divided:true,children:/*#__PURE__*/_jsxs(Item,{children:[/*#__PURE__*/_jsx(Item.Image,{src:mindImg}),/*#__PURE__*/_jsxs(Item.Content,{children:[/*#__PURE__*/_jsx(Item.Header,{children:/*#__PURE__*/_jsx(\"h1\",{children:\"The Ultimate Trivia Quiz\"})}),error&&/*#__PURE__*/_jsxs(Message,{error:true,onDismiss:function onDismiss(){return setError(null);},children:[/*#__PURE__*/_jsx(Message.Header,{children:\"Error!\"}),error.message]}),/*#__PURE__*/_jsx(Divider,{}),/*#__PURE__*/_jsxs(Item.Meta,{children:[/*#__PURE__*/_jsx(Dropdown,{fluid:true,selection:true,name:\"category\",placeholder:\"Select Quiz Category\",header:\"Select Quiz Category\",options:CATEGORIES,value:category,onChange:function onChange(e,_ref3){var value=_ref3.value;return setCategory(value);},disabled:processing}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(Dropdown,{fluid:true,selection:true,name:\"numOfQ\",placeholder:\"Select No. of Questions\",header:\"Select No. of Questions\",options:NUM_OF_QUESTIONS,value:numOfQuestions,onChange:function onChange(e,_ref4){var value=_ref4.value;return setNumOfQuestions(value);},disabled:processing}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(Dropdown,{fluid:true,selection:true,name:\"difficulty\",placeholder:\"Select Difficulty Level\",header:\"Select Difficulty Level\",options:DIFFICULTY,value:difficulty,onChange:function onChange(e,_ref5){var value=_ref5.value;return setDifficulty(value);},disabled:processing}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(Dropdown,{fluid:true,selection:true,name:\"type\",placeholder:\"Select Questions Type\",header:\"Select Questions Type\",options:QUESTIONS_TYPE,value:questionsType,onChange:function onChange(e,_ref6){var value=_ref6.value;return setQuestionsType(value);},disabled:processing}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(Dropdown,{search:true,selection:true,name:\"hours\",placeholder:\"Select Hours\",header:\"Select Hours\",options:COUNTDOWN_TIME.hours,value:countdownTime.hours,onChange:handleTimeChange,disabled:processing}),/*#__PURE__*/_jsx(Dropdown,{search:true,selection:true,name:\"minutes\",placeholder:\"Select Minutes\",header:\"Select Minutes\",options:COUNTDOWN_TIME.minutes,value:countdownTime.minutes,onChange:handleTimeChange,disabled:processing}),/*#__PURE__*/_jsx(Dropdown,{search:true,selection:true,name:\"seconds\",placeholder:\"Select Seconds\",header:\"Select Seconds\",options:COUNTDOWN_TIME.seconds,value:countdownTime.seconds,onChange:handleTimeChange,disabled:processing})]}),/*#__PURE__*/_jsx(Divider,{}),/*#__PURE__*/_jsx(Item.Extra,{children:/*#__PURE__*/_jsx(Button,{primary:true,size:\"big\",icon:\"play\",labelPosition:\"left\",content:processing?'Processing...':'Play Now',onClick:fetchData,disabled:!allFieldsSelected||processing})})]})]})})}),/*#__PURE__*/_jsx(\"br\",{})]});};export default Main;","map":{"version":3,"sources":["C:/Users/91912/OneDrive/Documents/toDElete/quiz-app/src/components/Main/index.js"],"names":["React","useState","Container","Segment","Item","Dropdown","Divider","Button","Message","CATEGORIES","NUM_OF_QUESTIONS","DIFFICULTY","QUESTIONS_TYPE","COUNTDOWN_TIME","shuffle","Offline","Main","startQuiz","category","setCategory","numOfQuestions","setNumOfQuestions","difficulty","setDifficulty","questionsType","setQuestionsType","hours","minutes","seconds","countdownTime","setCountdownTime","processing","setProcessing","error","setError","offline","setOffline","handleTimeChange","e","name","value","allFieldsSelected","fetchData","API","fetch","then","respone","json","data","setTimeout","response_code","results","message","forEach","element","options","correct_answer","incorrect_answers","catch","navigator","onLine","mindImg"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Container,\r\n  Segment,\r\n  Item,\r\n  Dropdown,\r\n  Divider,\r\n  Button,\r\n  Message,\r\n} from 'semantic-ui-react';\r\n\r\nimport mindImg from '../../images/mind.svg';\r\n\r\nimport {\r\n  CATEGORIES,\r\n  NUM_OF_QUESTIONS,\r\n  DIFFICULTY,\r\n  QUESTIONS_TYPE,\r\n  COUNTDOWN_TIME,\r\n} from '../../constants';\r\nimport { shuffle } from '../../utils';\r\n\r\nimport Offline from '../Offline';\r\n\r\nconst Main = ({ startQuiz }) => {\r\n  const [category, setCategory] = useState('0');\r\n  const [numOfQuestions, setNumOfQuestions] = useState(5);\r\n  const [difficulty, setDifficulty] = useState('0');\r\n  const [questionsType, setQuestionsType] = useState('0');\r\n  const [countdownTime, setCountdownTime] = useState({\r\n    hours: 0,\r\n    minutes: 120,\r\n    seconds: 0,\r\n  });\r\n  const [processing, setProcessing] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [offline, setOffline] = useState(false);\r\n\r\n  const handleTimeChange = (e, { name, value }) => {\r\n    setCountdownTime({ ...countdownTime, [name]: value });\r\n  };\r\n\r\n  let allFieldsSelected = false;\r\n  if (\r\n    category &&\r\n    numOfQuestions &&\r\n    difficulty &&\r\n    questionsType &&\r\n    (countdownTime.hours || countdownTime.minutes || countdownTime.seconds)\r\n  ) {\r\n    allFieldsSelected = true;\r\n  }\r\n\r\n  const fetchData = () => {\r\n    setProcessing(true);\r\n\r\n    if (error) setError(null);\r\n\r\n    const API = `https://opentdb.com/api.php?amount=${numOfQuestions}&category=${category}&difficulty=${difficulty}&type=${questionsType}`;\r\n\r\n    fetch(API)\r\n      .then(respone => respone.json())\r\n      .then(data =>\r\n        setTimeout(() => {\r\n          const { response_code, results } = data;\r\n\r\n          if (response_code === 1) {\r\n            const message = (\r\n              <p>\r\n                The API doesn't have enough questions for your query. (Ex.\r\n                Asking for 50 Questions in a Category that only has 20.)\r\n                <br />\r\n                <br />\r\n                Please change the <strong>No. of Questions</strong>,{' '}\r\n                <strong>Difficulty Level</strong>, or{' '}\r\n                <strong>Type of Questions</strong>.\r\n              </p>\r\n            );\r\n\r\n            setProcessing(false);\r\n            setError({ message });\r\n\r\n            return;\r\n          }\r\n\r\n          results.forEach(element => {\r\n            element.options = shuffle([\r\n              element.correct_answer,\r\n              ...element.incorrect_answers,\r\n            ]);\r\n          });\r\n\r\n          setProcessing(false);\r\n          startQuiz(\r\n            results,\r\n            countdownTime.hours + countdownTime.minutes + countdownTime.seconds\r\n          );\r\n        }, 1000)\r\n      )\r\n      .catch(error =>\r\n        setTimeout(() => {\r\n          if (!navigator.onLine) {\r\n            setOffline(true);\r\n          } else {\r\n            setProcessing(false);\r\n            setError(error);\r\n          }\r\n        }, 1000)\r\n      );\r\n  };\r\n\r\n  if (offline) return <Offline />;\r\n\r\n  return (\r\n    <Container>\r\n      <Segment>\r\n        <Item.Group divided>\r\n          <Item>\r\n            <Item.Image src={mindImg} />\r\n            <Item.Content>\r\n              <Item.Header>\r\n                <h1>The Ultimate Trivia Quiz</h1>\r\n              </Item.Header>\r\n              {error && (\r\n                <Message error onDismiss={() => setError(null)}>\r\n                  <Message.Header>Error!</Message.Header>\r\n                  {error.message}\r\n                </Message>\r\n              )}\r\n              <Divider />\r\n              <Item.Meta>\r\n                <Dropdown\r\n                  fluid\r\n                  selection\r\n                  name=\"category\"\r\n                  placeholder=\"Select Quiz Category\"\r\n                  header=\"Select Quiz Category\"\r\n                  options={CATEGORIES}\r\n                  value={category}\r\n                  onChange={(e, { value }) => setCategory(value)}\r\n                  disabled={processing}\r\n                />\r\n                <br />\r\n                <Dropdown\r\n                  fluid\r\n                  selection\r\n                  name=\"numOfQ\"\r\n                  placeholder=\"Select No. of Questions\"\r\n                  header=\"Select No. of Questions\"\r\n                  options={NUM_OF_QUESTIONS}\r\n                  value={numOfQuestions}\r\n                  onChange={(e, { value }) => setNumOfQuestions(value)}\r\n                  disabled={processing}\r\n                />\r\n                <br />\r\n                <Dropdown\r\n                  fluid\r\n                  selection\r\n                  name=\"difficulty\"\r\n                  placeholder=\"Select Difficulty Level\"\r\n                  header=\"Select Difficulty Level\"\r\n                  options={DIFFICULTY}\r\n                  value={difficulty}\r\n                  onChange={(e, { value }) => setDifficulty(value)}\r\n                  disabled={processing}\r\n                />\r\n                <br />\r\n                <Dropdown\r\n                  fluid\r\n                  selection\r\n                  name=\"type\"\r\n                  placeholder=\"Select Questions Type\"\r\n                  header=\"Select Questions Type\"\r\n                  options={QUESTIONS_TYPE}\r\n                  value={questionsType}\r\n                  onChange={(e, { value }) => setQuestionsType(value)}\r\n                  disabled={processing}\r\n                />\r\n                <br />\r\n                <Dropdown\r\n                  search\r\n                  selection\r\n                  name=\"hours\"\r\n                  placeholder=\"Select Hours\"\r\n                  header=\"Select Hours\"\r\n                  options={COUNTDOWN_TIME.hours}\r\n                  value={countdownTime.hours}\r\n                  onChange={handleTimeChange}\r\n                  disabled={processing}\r\n                />\r\n                <Dropdown\r\n                  search\r\n                  selection\r\n                  name=\"minutes\"\r\n                  placeholder=\"Select Minutes\"\r\n                  header=\"Select Minutes\"\r\n                  options={COUNTDOWN_TIME.minutes}\r\n                  value={countdownTime.minutes}\r\n                  onChange={handleTimeChange}\r\n                  disabled={processing}\r\n                />\r\n                <Dropdown\r\n                  search\r\n                  selection\r\n                  name=\"seconds\"\r\n                  placeholder=\"Select Seconds\"\r\n                  header=\"Select Seconds\"\r\n                  options={COUNTDOWN_TIME.seconds}\r\n                  value={countdownTime.seconds}\r\n                  onChange={handleTimeChange}\r\n                  disabled={processing}\r\n                />\r\n              </Item.Meta>\r\n              <Divider />\r\n              <Item.Extra>\r\n                <Button\r\n                  primary\r\n                  size=\"big\"\r\n                  icon=\"play\"\r\n                  labelPosition=\"left\"\r\n                  content={processing ? 'Processing...' : 'Play Now'}\r\n                  onClick={fetchData}\r\n                  disabled={!allFieldsSelected || processing}\r\n                />\r\n              </Item.Extra>\r\n            </Item.Content>\r\n          </Item>\r\n        </Item.Group>\r\n      </Segment>\r\n      <br />\r\n    </Container>\r\n  );\r\n};\r\n\r\nMain.propTypes = {\r\n  startQuiz: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Main;\r\n"]},"metadata":{},"sourceType":"module"}