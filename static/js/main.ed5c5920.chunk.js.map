{"version":3,"sources":["constants/countdownTime.js","components/Header/index.js","components/Layout/index.js","components/Loader/index.js","images/mind.svg","constants/categories.js","constants/numOfQuestions.js","constants/difficulty.js","constants/questionsType.js","utils/calculateGrade.js","utils/calculateScore.js","utils/getLetter.js","utils/shuffle.js","utils/timeConverter.js","components/Offline/index.js","components/Main/index.js","components/Countdown/index.js","components/Quiz/index.js","components/ShareButton/index.js","components/Result/Stats.js","components/Result/QNA.js","components/Result/index.js","components/App/index.js","serviceWorkerRegistration.js","index.js"],"names":["Header","useState","promptEvent","setPromptEvent","appAccepted","setAppAccepted","isAppInstalled","window","matchMedia","matches","addEventListener","e","preventDefault","Menu","stackable","inverted","size","Item","header","style","color","position","Button","icon","labelPosition","content","onClick","prompt","userChoice","then","result","outcome","console","log","Layout","children","Loader","Container","Message","Icon","name","loading","Content","CATEGORIES","key","text","value","COUNTDOWN_TIME","hours","minutes","seconds","i","push","DIFFICULTY","NUM_OF_QUESTIONS","QUESTIONS_TYPE","calculateGrade","score","undefined","percentage","parseInt","grade","remarks","calculateScore","totalQuestions","correctAnswers","Number","toFixed","getLetter","number","letter","shuffle","array","length","j","Math","floor","random","timeConverter","milliseconds","slice","Offline","location","reload","Segment","placeholder","role","aria-label","Main","startQuiz","category","setCategory","numOfQuestions","setNumOfQuestions","difficulty","setDifficulty","questionsType","setQuestionsType","countdownTime","setCountdownTime","processing","setProcessing","error","setError","offline","setOffline","handleTimeChange","allFieldsSelected","Group","divided","Image","src","mindImg","onDismiss","message","Divider","Meta","Dropdown","fluid","selection","options","onChange","disabled","search","Extra","primary","API","fetch","respone","json","data","setTimeout","response_code","results","forEach","element","correct_answer","incorrect_answers","catch","navigator","onLine","Countdown","timeOver","setTimeTaken","totalTime","timerTime","setTimerTime","useEffect","timer","setInterval","newTime","clearInterval","Swal","fire","title","willClose","basic","floated","Popup","trigger","active","Quiz","endQuiz","questionIndex","setQuestionIndex","setCorrectAnswers","userSlectedAns","setUserSlectedAns","questionsAndAnswers","setQuestionsAndAnswers","timeTaken","handleItemClick","as","block","floating","he","decode","question","Description","vertical","map","option","decodedOption","marginRight","point","qna","user_answer","ShareButton","share","circular","document","url","Modal","closeIcon","className","href","target","rel","marginBottom","Stats","replayQuiz","resetQuiz","textAlign","marginTop","QNA","Table","celled","striped","selectable","Row","HeaderCell","Body","item","Cell","Result","activeTab","setActiveTab","handleTabClick","widths","App","setLoading","setData","isQuizStarted","setIsQuizStarted","isQuizCompleted","setIsQuizCompleted","resultData","setResultData","shuffledData","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","toast","showConfirmButton","onSuccess","ReactDOM","render","StrictMode","getElementById","URL","process","origin","headers","response","contentType","get","status","indexOf","ready","unregister","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"yIAMA,I,uFC4CeA,EA/CA,WAAO,IAAD,EACmBC,mBAAS,MAD5B,mBACZC,EADY,KACCC,EADD,OAEmBF,oBAAS,GAF5B,mBAEZG,EAFY,KAECC,EAFD,KAIfC,GAAiB,GAEjBC,OAAOC,WAAW,8BAA8BC,SAAWL,KAC7DE,GAAiB,GAGnBC,OAAOG,iBAAiB,uBAAuB,SAAAC,GAC7CA,EAAEC,iBACFT,EAAeQ,MAejB,OACE,eAACE,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAQ,EAACC,KAAK,UAA9B,UACE,cAACH,EAAA,EAAKI,KAAN,CAAWC,QAAM,EAAjB,SACE,oBAAIC,MAAO,CAAEC,MAAO,WAApB,uBAEDlB,IAAgBI,GACf,cAACO,EAAA,EAAKI,KAAN,CAAWI,SAAS,QAApB,SACE,cAACC,EAAA,EAAD,CACEF,MAAM,OACNG,KAAK,iBACLC,cAAc,OACdC,QAAQ,cACRC,QAxBS,WACjBxB,EAAYyB,SACZzB,EAAY0B,WAAWC,MAAK,SAAAC,GACH,aAAnBA,EAAOC,SACT1B,GAAe,GACf2B,QAAQC,IAAI,kCAEZD,QAAQC,IAAI,8CCPLC,EAbA,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAChB,OACE,eAAC,WAAD,WACE,cAAC,EAAD,IACA,+BAAOA,Q,0BCQEC,EAdA,WACb,OACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAASf,MAAI,EAACP,KAAK,MAAnB,UACE,cAACuB,EAAA,EAAD,CAAMC,KAAK,iBAAiBC,SAAO,IACnC,eAACH,EAAA,EAAQI,QAAT,WACE,cAACJ,EAAA,EAAQtC,OAAT,8BADF,iD,qDCRO,MAA0B,iCCgI1B2C,EAhII,CACjB,CACEC,IAAK,IACLC,KAAM,eACNC,MAAO,KAET,CACEF,IAAK,EACLC,KAAM,oBACNC,MAAO,GAET,CACEF,IAAK,GACLC,KAAM,uBACNC,MAAO,IAET,CACEF,IAAK,GACLC,KAAM,uBACNC,MAAO,IAET,CACEF,IAAK,GACLC,KAAM,uBACNC,MAAO,IAET,CACEF,IAAK,GACLC,KAAM,qCACNC,MAAO,IAET,CACEF,IAAK,GACLC,KAAM,4BACNC,MAAO,IAET,CACEF,IAAK,GACLC,KAAM,6BACNC,MAAO,IAET,CACEF,IAAK,GACLC,KAAM,6BACNC,MAAO,IAET,CACEF,IAAK,GACLC,KAAM,mBACNC,MAAO,IAET,CACEF,IAAK,GACLC,KAAM,qBACNC,MAAO,IAET,CACEF,IAAK,GACLC,KAAM,uBACNC,MAAO,IAET,CACEF,IAAK,GACLC,KAAM,YACNC,MAAO,IAET,CACEF,IAAK,GACLC,KAAM,SACNC,MAAO,IAET,CACEF,IAAK,GACLC,KAAM,YACNC,MAAO,IAET,CACEF,IAAK,GACLC,KAAM,UACNC,MAAO,IAET,CACEF,IAAK,GACLC,KAAM,WACNC,MAAO,IAET,CACEF,IAAK,GACLC,KAAM,OACNC,MAAO,IAET,CACEF,IAAK,GACLC,KAAM,cACNC,MAAO,IAET,CACEF,IAAK,GACLC,KAAM,UACNC,MAAO,IAET,CACEF,IAAK,GACLC,KAAM,WACNC,MAAO,IAET,CACEF,IAAK,GACLC,KAAM,wBACNC,MAAO,IAET,CACEF,IAAK,GACLC,KAAM,mBACNC,MAAO,IAET,CACEF,IAAK,GACLC,KAAM,wCACNC,MAAO,IAET,CACEF,IAAK,GACLC,KAAM,sCACNC,MAAO,KL5HLC,EAAiB,CACrBC,MAAO,GACPC,QAAS,GACTC,QAAS,IAGFC,EAAI,EAAGA,EAAI,IAAKA,IACvBJ,EAAeC,MAAMI,KAAK,CAAER,IAAKO,EAAGN,KAAMM,EAAGL,MAAW,GAAJK,EAAS,KAG/D,IAAK,IAAIA,EAAI,EAAGA,EAAI,GAAIA,IACtBJ,EAAeE,QAAQG,KAAK,CAAER,IAAKO,EAAGN,KAAMM,EAAGL,MAAW,GAAJK,IAGxD,IAAK,IAAIA,EAAI,EAAGA,EAAI,GAAIA,IACtBJ,EAAeG,QAAQE,KAAK,CAAER,IAAKO,EAAGN,KAAMM,EAAGL,MAAOK,IMbxD,INgBeJ,QOKAM,EAvBI,CACjB,CACET,IAAK,IACLC,KAAM,iBACNC,MAAO,KAET,CACEF,IAAK,OACLC,KAAM,OACNC,MAAO,QAET,CACEF,IAAK,SACLC,KAAM,SACNC,MAAO,UAET,CACEF,IAAK,OACLC,KAAM,OACNC,MAAO,SDnBLQ,EAAmB,GAEhBH,EAAI,EAAGA,GAAK,GAAIA,IACvBG,EAAiBF,KAAK,CAAER,IAAKO,EAAGN,KAAMM,EAAGL,MAAOK,IAGnCG,QEYAC,EAlBQ,CACrB,CACEX,IAAK,IACLC,KAAM,WACNC,MAAO,KAET,CACEF,IAAK,WACLC,KAAM,kBACNC,MAAO,YAET,CACEF,IAAK,UACLC,KAAM,eACNC,MAAO,YCqCIU,EAnDQ,SAAAC,GAErB,GAAe,OAAVA,QAA4BC,IAAVD,GAAwC,kBAAVA,EACnD,OAAO,KAGT,IAAME,EAAaC,SAASH,GAExBI,EAAQ,KAqCZ,OAlCIF,GAAc,GAChBE,EAAQ,KACCF,GAAc,IAAMA,GAAc,GAC3CE,EAAQ,IACCF,GAAc,IAAMA,GAAc,GAC3CE,EAAQ,KACCF,GAAc,IAAMA,GAAc,GAC3CE,EAAQ,KACCF,GAAc,IAAMA,GAAc,GAC3CE,EAAQ,IACCF,GAAc,IAAMA,GAAc,GAC3CE,EAAQ,KACCF,GAAc,IAAMA,GAAc,GAC3CE,EAAQ,KACCF,GAAc,IAAMA,GAAc,GAC3CE,EAAQ,IACCF,GAAc,IAAMA,GAAc,GAC3CE,EAAQ,KACCF,GAAc,IAAMA,GAAc,GAC3CE,EAAQ,KACCF,GAAc,IAAMA,GAAc,GAC3CE,EAAQ,IACCF,GAAc,IAAMA,GAAc,GAC3CE,EAAQ,KACCF,EAAa,KACtBE,EAAQ,KASH,CACLA,QACAC,QAREL,GAAS,GACD,+BAEA,uBCnCCM,EAPQ,SAACC,EAAgBC,GACtC,OAAwB,IAAnBD,EACI,EAEFE,QAA0B,IAAjBD,EAAwBD,GAAgBG,QAAQ,KCoBnDC,EAxBG,SAAAC,GAChB,IAAIC,EAEJ,OAAQD,GACN,KAAK,EACHC,EAAS,KACT,MACF,KAAK,EACHA,EAAS,KACT,MACF,KAAK,EACHA,EAAS,KACT,MACF,KAAK,EACHA,EAAS,KACT,MACF,QACEA,EAAS,KAIb,OAAOA,GCVMC,EAXC,SAAAC,GAGd,IAAK,IAAIrB,GAFTqB,EAAK,YAAOA,IAEOC,OAAS,EAAGtB,EAAI,EAAGA,IAAK,CACzC,IAAMuB,EAAIC,KAAKC,MAAMD,KAAKE,UAAY1B,EAAI,IADD,EAElB,CAACqB,EAAME,GAAIF,EAAMrB,IAAvCqB,EAAMrB,GAFkC,KAE9BqB,EAAME,GAFwB,KAK3C,OAAOF,GCOMM,EAfO,SAAAC,GACpB,OAAsB,OAAjBA,QAA0CrB,IAAjBqB,GAAsD,kBAAjBA,EAC1D,KAMF,CACL/B,MALY,WAAI2B,KAAKC,MAAMG,EAAe,OAAWC,OAAO,GAM5D/B,QALc,WAAI0B,KAAKC,MAAOG,EAAe,IAAS,KAAMC,OAAO,GAMnE9B,QALc,WAAIyB,KAAKC,MAAOG,EAAe,IAAQ,IAAM,IAAKC,OAAO,K,SCmB5DC,EAtBC,WAGd,OAFA1E,OAAOG,iBAAiB,UAAU,kBAAMH,OAAO2E,SAASC,YAGtD,cAAC9C,EAAA,EAAD,UACE,cAAC+C,EAAA,EAAD,CAASC,aAAW,EAApB,SACE,eAAC,IAAD,CAAQ9D,MAAI,EAAZ,UACE,cAACgB,EAAA,EAAD,CAAMC,KAAK,WACX,yCACA,4HAE2B,IACzB,sBAAM8C,KAAK,MAAMC,aAAW,SAA5B,qCCgOGC,EAtNF,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAAgB,EACExF,mBAAS,KADX,mBACvByF,EADuB,KACbC,EADa,OAEc1F,mBAAS,GAFvB,mBAEvB2F,EAFuB,KAEPC,EAFO,OAGM5F,mBAAS,KAHf,mBAGvB6F,EAHuB,KAGXC,EAHW,OAIY9F,mBAAS,KAJrB,mBAIvB+F,EAJuB,KAIRC,EAJQ,OAKYhG,mBAAS,CACjD+C,MAAO,EACPC,QAAS,IACTC,QAAS,IARmB,mBAKvBgD,EALuB,KAKRC,EALQ,OAUMlG,oBAAS,GAVf,mBAUvBmG,EAVuB,KAUXC,EAVW,OAWJpG,mBAAS,MAXL,mBAWvBqG,EAXuB,KAWhBC,EAXgB,OAYAtG,oBAAS,GAZT,mBAYvBuG,EAZuB,KAYdC,GAZc,KAcxBC,GAAmB,SAAC/F,EAAD,GAAyB,IAAnB6B,EAAkB,EAAlBA,KAAMM,EAAY,EAAZA,MACnCqD,EAAiB,2BAAKD,GAAN,kBAAsB1D,EAAOM,MAG3C6D,IAAoB,EAEtBjB,GACAE,GACAE,GACAE,IACCE,EAAclD,OAASkD,EAAcjD,SAAWiD,EAAchD,WAE/DyD,IAAoB,GA6DtB,OAAIH,EAAgB,cAAC,EAAD,IAGlB,eAACnE,EAAA,EAAD,WACE,cAAC+C,EAAA,EAAD,UACE,cAACnE,EAAA,EAAK2F,MAAN,CAAYC,SAAO,EAAnB,SACE,eAAC5F,EAAA,EAAD,WACE,cAACA,EAAA,EAAK6F,MAAN,CAAYC,IAAKC,IACjB,eAAC/F,EAAA,EAAKyB,QAAN,WACE,cAACzB,EAAA,EAAKjB,OAAN,UACE,4DAEDsG,GACC,eAAChE,EAAA,EAAD,CAASgE,OAAK,EAACW,UAAW,kBAAMV,EAAS,OAAzC,UACE,cAACjE,EAAA,EAAQtC,OAAT,qBACCsG,EAAMY,WAGX,cAACC,EAAA,EAAD,IACA,eAAClG,EAAA,EAAKmG,KAAN,WACE,cAACC,EAAA,EAAD,CACEC,OAAK,EACLC,WAAS,EACT/E,KAAK,WACL6C,YAAY,uBACZnE,OAAO,uBACPsG,QAAS7E,EACTG,MAAO4C,EACP+B,SAAU,SAAC9G,EAAD,OAAMmC,EAAN,EAAMA,MAAN,OAAkB6C,EAAY7C,IACxC4E,SAAUtB,IAEZ,uBACA,cAACiB,EAAA,EAAD,CACEC,OAAK,EACLC,WAAS,EACT/E,KAAK,SACL6C,YAAY,0BACZnE,OAAO,0BACPsG,QAASlE,EACTR,MAAO8C,EACP6B,SAAU,SAAC9G,EAAD,OAAMmC,EAAN,EAAMA,MAAN,OAAkB+C,EAAkB/C,IAC9C4E,SAAUtB,IAEZ,uBACA,cAACiB,EAAA,EAAD,CACEC,OAAK,EACLC,WAAS,EACT/E,KAAK,aACL6C,YAAY,0BACZnE,OAAO,0BACPsG,QAASnE,EACTP,MAAOgD,EACP2B,SAAU,SAAC9G,EAAD,OAAMmC,EAAN,EAAMA,MAAN,OAAkBiD,EAAcjD,IAC1C4E,SAAUtB,IAEZ,uBACA,cAACiB,EAAA,EAAD,CACEC,OAAK,EACLC,WAAS,EACT/E,KAAK,OACL6C,YAAY,wBACZnE,OAAO,wBACPsG,QAASjE,EACTT,MAAOkD,EACPyB,SAAU,SAAC9G,EAAD,OAAMmC,EAAN,EAAMA,MAAN,OAAkBmD,EAAiBnD,IAC7C4E,SAAUtB,IAEZ,uBACA,cAACiB,EAAA,EAAD,CACEM,QAAM,EACNJ,WAAS,EACT/E,KAAK,QACL6C,YAAY,eACZnE,OAAO,eACPsG,QAASzE,EAAeC,MACxBF,MAAOoD,EAAclD,MACrByE,SAAUf,GACVgB,SAAUtB,IAEZ,cAACiB,EAAA,EAAD,CACEM,QAAM,EACNJ,WAAS,EACT/E,KAAK,UACL6C,YAAY,iBACZnE,OAAO,iBACPsG,QAASzE,EAAeE,QACxBH,MAAOoD,EAAcjD,QACrBwE,SAAUf,GACVgB,SAAUtB,IAEZ,cAACiB,EAAA,EAAD,CACEM,QAAM,EACNJ,WAAS,EACT/E,KAAK,UACL6C,YAAY,iBACZnE,OAAO,iBACPsG,QAASzE,EAAeG,QACxBJ,MAAOoD,EAAchD,QACrBuE,SAAUf,GACVgB,SAAUtB,OAGd,cAACe,EAAA,EAAD,IACA,cAAClG,EAAA,EAAK2G,MAAN,UACE,cAACtG,EAAA,EAAD,CACEuG,SAAO,EACP7G,KAAK,MACLO,KAAK,OACLC,cAAc,OACdC,QAAS2E,EAAa,gBAAkB,WACxC1E,QAxKE,WAChB2E,GAAc,GAEVC,GAAOC,EAAS,MAEpB,IAAMuB,EAAG,6CAAyClC,EAAzC,qBAAoEF,EAApE,uBAA2FI,EAA3F,iBAA8GE,GAEvH+B,MAAMD,GACHjG,MAAK,SAAAmG,GAAO,OAAIA,EAAQC,UACxBpG,MAAK,SAAAqG,GAAI,OACRC,YAAW,WAAO,IACRC,EAA2BF,EAA3BE,cAAeC,EAAYH,EAAZG,QAEvB,GAAsB,IAAlBD,EAAqB,CACvB,IAAMlB,EACJ,oJAGE,uBACA,uBAJF,qBAKoB,sDALpB,IAKuD,IACrD,sDANF,OAMwC,IACtC,uDAPF,OAcF,OAHAb,GAAc,QACdE,EAAS,CAAEW,YAKbmB,EAAQC,SAAQ,SAAAC,GACdA,EAAQf,QAAUjD,EAAQ,CACxBgE,EAAQC,gBADe,mBAEpBD,EAAQE,wBAIfpC,GAAc,GACdZ,EACE4C,EACAnC,EAAclD,MAAQkD,EAAcjD,QAAUiD,EAAchD,WAE7D,QAEJwF,OAAM,SAAApC,GAAK,OACV6B,YAAW,WACJQ,UAAUC,QAGbvC,GAAc,GACdE,EAASD,IAHTG,IAAW,KAKZ,SAmHOiB,UAAWf,IAAqBP,gBAO5C,2B,4CCrKSyC,EA1DG,SAAC,GAA+C,IAA7C3C,EAA4C,EAA5CA,cAAe4C,EAA6B,EAA7BA,SAAUC,EAAmB,EAAnBA,aACtCC,EAA4B,IAAhB9C,EAD6C,EAE7BjG,mBAAS+I,GAFoB,mBAExDC,EAFwD,KAE7CC,EAF6C,OAG3BpE,EAAcmE,GAA1CjG,EAHuD,EAGvDA,MAAOC,EAHgD,EAGhDA,QAASC,EAHuC,EAGvCA,QA4BxB,OA1BAiG,qBAAU,WACR,IAAMC,EAAQC,aAAY,WACxB,IAAMC,EAAUL,EAAY,IAExBK,GAAW,EACbJ,EAAaI,IAEbC,cAAcH,GAEdI,IAAKC,KAAK,CACRC,MAAM,iBACNnI,KAAM,OACN6H,MAAO,IACPO,UAAW,kBAAMb,EAASE,EAAYC,SAGzC,KAEH,OAAO,WACLM,cAAcH,GACdL,EAAaC,EAAYC,EAAY,QAItC,CAACA,IAGF,eAAC3H,EAAA,EAAOsF,MAAR,CAAc5F,KAAK,UAAU4I,OAAK,EAACC,QAAQ,QAA3C,UACE,cAACC,EAAA,EAAD,CACErI,QAAQ,QACRsI,QAAS,cAACzI,EAAA,EAAD,CAAQ0I,QAAM,EAAd,SAAgBhH,IACzB3B,SAAS,gBAEX,cAACyI,EAAA,EAAD,CACErI,QAAQ,UACRsI,QAAS,cAACzI,EAAA,EAAD,CAAQ0I,QAAM,EAAd,SAAgB/G,IACzB5B,SAAS,gBAEX,cAACyI,EAAA,EAAD,CACErI,QAAQ,UACRsI,QAAS,cAACzI,EAAA,EAAD,CAAQ0I,QAAM,EAAd,SAAgB9G,IACzB7B,SAAS,oBC6FF4I,EAhIF,SAAC,GAAsC,IAApC/B,EAAmC,EAAnCA,KAAMhC,EAA6B,EAA7BA,cAAegE,EAAc,EAAdA,QAAc,EAEPjK,mBAAS,GAFF,mBAE1CkK,EAF0C,KAE3BC,EAF2B,OAGLnK,mBAAS,GAHJ,mBAG1CgE,EAH0C,KAG1BoG,EAH0B,OAILpK,mBAAS,MAJJ,mBAI1CqK,EAJ0C,KAI1BC,EAJ0B,OAKKtK,mBAAS,IALd,mBAK1CuK,EAL0C,KAKrBC,EALqB,OAMfxK,mBAAS,MANM,mBAM1CyK,EAN0C,KAM/B3B,EAN+B,KAQ3C4B,EAAkB,SAAChK,EAAD,GAAkB,IAAZ6B,EAAW,EAAXA,KAC5B+H,EAAkB/H,IAyCpB,OACE,cAACvB,EAAA,EAAKjB,OAAN,UACE,eAACqC,EAAA,EAAD,WACE,cAAC+C,EAAA,EAAD,UACE,cAACnE,EAAA,EAAK2F,MAAN,CAAYC,SAAO,EAAnB,SACE,cAAC5F,EAAA,EAAD,UACE,eAACA,EAAA,EAAKyB,QAAN,WACE,eAACzB,EAAA,EAAK2G,MAAN,WACE,eAAC,IAAD,CAAQgD,GAAG,KAAKC,OAAK,EAAChB,QAAQ,OAA9B,UACE,cAACtH,EAAA,EAAD,CAAMC,KAAK,gBACX,cAAC,IAAOE,QAAR,gCACkByH,EAAgB,EADlC,eAC0CjC,EAAKzD,aAGjD,cAAC,EAAD,CACEyB,cAAeA,EACf4C,SAzBD,SAAA4B,GACf,OAAOR,EAAQ,CACblG,eAAgBkE,EAAKzD,OACrBR,iBACAyG,YACAF,yBAqBczB,aAAcA,OAGlB,uBACA,eAAC9H,EAAA,EAAKmG,KAAN,WACE,cAAC9E,EAAA,EAAD,CAAStB,KAAK,OAAO8J,UAAQ,EAA7B,SACE,yCAAUC,IAAGC,OAAO9C,EAAKiC,GAAec,eAE1C,uBACA,cAAChK,EAAA,EAAKiK,YAAN,UACE,+EAEF,cAAC/D,EAAA,EAAD,IACA,cAACtG,EAAA,EAAD,CAAMsK,UAAQ,EAAC7D,OAAK,EAACtG,KAAK,UAA1B,SACGkH,EAAKiC,GAAe3C,QAAQ4D,KAAI,SAACC,EAAQlI,GACxC,IAAMmB,EAASF,EAAUjB,GACnBmI,EAAgBP,IAAGC,OAAOK,GAEhC,OACE,eAACxK,EAAA,EAAKI,KAAN,CAEEuB,KAAM8I,EACNtB,OAAQM,IAAmBgB,EAC3B5J,QAASiJ,EAJX,UAME,mBAAGxJ,MAAO,CAAEoK,YAAa,OAAzB,SAAmCjH,IAClCgH,IANIA,WAYf,cAACnE,EAAA,EAAD,IACA,cAAClG,EAAA,EAAK2G,MAAN,UACE,cAACtG,EAAA,EAAD,CACEuG,SAAO,EACPpG,QAAQ,OACRC,QA5FC,WACjB,IAAI8J,EAAQ,EACRlB,IAAmBS,IAAGC,OAAO9C,EAAKiC,GAAe3B,kBACnDgD,EAAQ,GAGV,IAAMC,EAAMjB,EAQZ,GAPAiB,EAAIrI,KAAK,CACP6H,SAAUF,IAAGC,OAAO9C,EAAKiC,GAAec,UACxCS,YAAapB,EACb9B,eAAgBuC,IAAGC,OAAO9C,EAAKiC,GAAe3B,gBAC9CgD,UAGErB,IAAkBjC,EAAKzD,OAAS,EAClC,OAAOyF,EAAQ,CACblG,eAAgBkE,EAAKzD,OACrBR,eAAgBA,EAAiBuH,EACjCd,YACAF,oBAAqBiB,IAIzBpB,EAAkBpG,EAAiBuH,GACnCpB,EAAiBD,EAAgB,GACjCI,EAAkB,MAClBE,EAAuBgB,IAmEP5B,QAAQ,QACR7I,KAAK,MACLO,KAAK,gBACLC,cAAc,QACdkG,UAAW4C,eAOvB,6B,SCvDOqB,EA5EK,WAYlB,OACE,cAAC,WAAD,UACGhD,UAAUiD,MACT,cAACtK,EAAA,EAAD,CACEoI,MAAM,QACNG,QAAQ,QACR7I,KAAK,MACL6K,UAAQ,EACRtK,KAAK,kBACLG,QApBY,WAClBiH,UACGiD,MAAM,CACLlC,MAAOoC,SAASpC,MAChB7G,KAAM,2CACNkJ,IAAK,4CAENlK,MAAK,kBAAMG,QAAQC,IAAI,0BACvByG,OAAM,SAAApC,GAAK,OAAItE,QAAQC,IAAIqE,EAAMY,eAehC,eAAC8E,EAAA,EAAD,CACEC,WAAS,EACTjL,KAAK,OACL+I,QACE,cAACzI,EAAA,EAAD,CACEoI,MAAM,QACNG,QAAQ,QACR7I,KAAK,MACL6K,UAAQ,EACRtK,KAAK,oBATX,UAaE,cAACyK,EAAA,EAAMhM,OAAP,CAAckM,UAAU,oBAAxB,sBACA,eAACF,EAAA,EAAMtJ,QAAP,CAAewJ,UAAU,8BAAzB,UACE,mBACEC,KAAK,kFACLC,OAAO,SACPC,IAAI,sBAHN,SAKE,eAAC/K,EAAA,EAAD,CAAQF,MAAM,WAAWJ,KAAK,MAAMG,MAAO,CAAEmL,aAAc,GAA3D,UACE,cAAC/J,EAAA,EAAD,CAAMC,KAAK,aADb,gBAKF,mBACE2J,KAAK,8JACLC,OAAO,SACPC,IAAI,sBAHN,SAKE,eAAC/K,EAAA,EAAD,CAAQF,MAAM,UAAUJ,KAAK,MAAMG,MAAO,CAAEmL,aAAc,GAA1D,UACE,cAAC/J,EAAA,EAAD,CAAMC,KAAK,YADb,eAKF,mBACE2J,KAAK,wGACLC,OAAO,SACPC,IAAI,sBAHN,SAKE,eAAC/K,EAAA,EAAD,CAAQF,MAAM,WAAWJ,KAAK,MAA9B,UACE,cAACuB,EAAA,EAAD,CAAMC,KAAK,aADb,yBCQC+J,EApED,SAAC,GAMR,IALLvI,EAKI,EALJA,eACAC,EAII,EAJJA,eACAyG,EAGI,EAHJA,UACA8B,EAEI,EAFJA,WACAC,EACI,EADJA,UAEMhJ,EAAQM,EAAeC,EAAgBC,GADzC,EAEuBT,EAAeC,GAAlCI,EAFJ,EAEIA,MAAOC,EAFX,EAEWA,QAFX,EAGgCgB,EAAc4F,GAA1C1H,EAHJ,EAGIA,MAAOC,EAHX,EAGWA,QAASC,EAHpB,EAGoBA,QAExB,OACE,eAACkC,EAAA,EAAD,WACE,cAAC,IAAD,CAAQwF,GAAG,KAAK8B,UAAU,SAAS7B,OAAK,EAAxC,SACG/G,IAEH,eAAC,IAAD,CAAQ8G,GAAG,KAAK8B,UAAU,SAAS7B,OAAK,EAAxC,oBACUhH,KAEV,eAAC,IAAD,CAAQ+G,GAAG,KAAK8B,UAAU,SAAS7B,OAAK,EAAxC,8BACoB7G,KAEpB,eAAC,IAAD,CAAQ4G,GAAG,KAAK8B,UAAU,SAAS7B,OAAK,EAAxC,8BACoB5G,KAEpB,eAAC,IAAD,CAAQ2G,GAAG,KAAK8B,UAAU,SAAS7B,OAAK,EAAxC,yBACepH,EADf,OAGA,cAAC,IAAD,CAAQmH,GAAG,KAAK8B,UAAU,SAAS7B,OAAK,EAAxC,gCAGA,eAAC,IAAD,CAAQD,GAAG,KAAK8B,UAAU,SAAS7B,OAAK,EAAxC,wBACc,IADd,UAEM3G,OAAOlB,GAFb,aAEwBkB,OAAOjB,GAF/B,aAE4CiB,OAAOhB,GAFnD,QAIA,sBAAK/B,MAAO,CAAEwL,UAAW,IAAzB,UACE,cAACrL,EAAA,EAAD,CACEuG,SAAO,EACPpG,QAAQ,aACRC,QAAS8K,EACTxL,KAAK,MACLO,KAAK,OACLC,cAAc,OACdL,MAAO,CAAEoK,YAAa,GAAIe,aAAc,KAE1C,cAAChL,EAAA,EAAD,CACEF,MAAM,OACNK,QAAQ,eACRC,QAAS+K,EACTzL,KAAK,MACLO,KAAK,OACLC,cAAc,OACdL,MAAO,CAAEmL,aAAc,KAEzB,cAAC,EAAD,W,UC1BOM,GA/BH,SAAC,GAA6B,IAA3BpC,EAA0B,EAA1BA,oBACb,OACE,eAACqC,GAAA,EAAD,CAAOC,QAAM,EAACC,SAAO,EAACC,YAAU,EAAChM,KAAK,QAAtC,UACE,cAAC6L,GAAA,EAAM7M,OAAP,UACE,eAAC6M,GAAA,EAAMI,IAAP,WACE,cAACJ,GAAA,EAAMK,WAAP,kBACA,cAACL,GAAA,EAAMK,WAAP,wBACA,cAACL,GAAA,EAAMK,WAAP,2BACA,cAACL,GAAA,EAAMK,WAAP,8BACA,cAACL,GAAA,EAAMK,WAAP,0BAGJ,cAACL,GAAA,EAAMM,KAAP,UACG3C,EAAoBY,KAAI,SAACgC,EAAMjK,GAAP,OACvB,eAAC0J,GAAA,EAAMI,IAAP,WACE,cAACJ,GAAA,EAAMQ,KAAP,UAAalK,EAAI,IACjB,cAAC0J,GAAA,EAAMQ,KAAP,UAAaD,EAAKnC,WAClB,cAAC4B,GAAA,EAAMQ,KAAP,UAAaD,EAAK1B,cAClB,cAACmB,GAAA,EAAMQ,KAAP,UAAaD,EAAK5E,iBAClB,cAACqE,GAAA,EAAMQ,KAAP,UAAaD,EAAK5B,UALJrI,EAAI,YCyCfmK,GApDA,SAAC,GAOT,IANLtJ,EAMI,EANJA,eACAC,EAKI,EALJA,eACAyG,EAII,EAJJA,UACAF,EAGI,EAHJA,oBACAgC,EAEI,EAFJA,WACAC,EACI,EADJA,UACI,EAC8BxM,mBAAS,SADvC,mBACGsN,EADH,KACcC,EADd,KAGEC,EAAiB,SAAC9M,EAAD,GAAkB,IAAZ6B,EAAW,EAAXA,KAC3BgL,EAAahL,IAGf,OACE,eAACH,EAAA,EAAD,WACE,eAACxB,EAAA,EAAD,CAAMyG,OAAK,EAACoG,OAAQ,EAApB,UACE,cAAC7M,EAAA,EAAKI,KAAN,CACEuB,KAAK,QACLwH,OAAsB,UAAduD,EACR7L,QAAS+L,IAEX,cAAC5M,EAAA,EAAKI,KAAN,CACEuB,KAAK,MACLwH,OAAsB,QAAduD,EACR7L,QAAS+L,OAGE,UAAdF,GACC,cAAC,EAAD,CACEvJ,eAAgBA,EAChBC,eAAgBA,EAChByG,UAAWA,EACX8B,WAAYA,EACZC,UAAWA,IAGA,QAAdc,GAAuB,cAAC,GAAD,CAAK/C,oBAAqBA,IAClD,2BC0CSmD,GA7EH,WAAO,IAAD,EACc1N,oBAAS,GADvB,mBACTwC,EADS,KACAmL,EADA,OAEQ3N,mBAAS,MAFjB,mBAETiI,EAFS,KAEH2F,EAFG,OAG0B5N,mBAAS,MAHnC,mBAGTiG,EAHS,KAGMC,EAHN,OAI0BlG,oBAAS,GAJnC,mBAIT6N,EAJS,KAIMC,EAJN,OAK8B9N,oBAAS,GALvC,mBAKT+N,EALS,KAKQC,EALR,OAMoBhO,mBAAS,MAN7B,mBAMTiO,EANS,KAMGC,EANH,KA6DhB,OACE,eAAC,EAAD,WACG1L,GAAW,cAAC,EAAD,KACVA,IAAYqL,IAAkBE,GAC9B,cAAC,EAAD,CAAMvI,UAzDM,SAACyC,EAAMhC,GACvB0H,GAAW,GACXzH,EAAiBD,GAEjBiC,YAAW,WACT0F,EAAQ3F,GACR6F,GAAiB,GACjBH,GAAW,KACV,SAmDCnL,GAAWqL,GACX,cAAC,EAAD,CAAM5F,KAAMA,EAAMhC,cAAeA,EAAegE,QAjDtC,SAAAgE,GACdN,GAAW,GAEXzF,YAAW,WACT4F,GAAiB,GACjBE,GAAmB,GACnBE,EAAcD,GACdN,GAAW,KACV,SA2CCnL,GAAWuL,GACX,cAAC,GAAD,2BAAYE,GAAZ,IAAwB1B,WAzCX,WACjBoB,GAAW,GAEX,IAAMQ,EAAe7J,EAAQ2D,GAC7BkG,EAAa9F,SAAQ,SAAAC,GACnBA,EAAQf,QAAUjD,EAAQgE,EAAQf,YAGpCqG,EAAQO,GAERjG,YAAW,WACT4F,GAAiB,GACjBE,GAAmB,GACnBE,EAAc,MACdP,GAAW,KACV,MA0BiDnB,UAvBpC,WAChBmB,GAAW,GAEXzF,YAAW,WACT0F,EAAQ,MACR1H,EAAiB,MACjB4H,GAAiB,GACjBE,GAAmB,GACnBE,EAAc,MACdP,GAAW,KACV,aClEDS,GAAcC,QACW,cAA7B/N,OAAO2E,SAASqJ,UAEe,UAA7BhO,OAAO2E,SAASqJ,UAEhBhO,OAAO2E,SAASqJ,SAASC,MACvB,2DAqCN,SAASC,GAAgBC,EAAOC,GAC9BhG,UAAUiG,cACPC,SAASH,GACT7M,MAAK,SAAAiN,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfxG,UAAUiG,cAAcQ,YAI1BpN,QAAQC,IACN,qFAKE0M,GAAUA,EAAOU,UACnBV,EAAOU,SAASP,KAMlB9M,QAAQC,IAAI,sCAEZuH,IAAKC,KAAK,CACR6F,MAAO,OACPjO,SAAU,SACVE,KAAM,UACNmI,MAAO,gCACP6F,mBAAmB,EACnBnG,MAAO,MAILuF,GAAUA,EAAOa,WACnBb,EAAOa,UAAUV,WAO5BpG,OAAM,SAAApC,GACLtE,QAAQsE,MAAM,4CAA6CA,MCxFjEmJ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEF7D,SAAS8D,eAAe,SDEnB,SAAkBjB,GACvB,GAA6C,kBAAmBhG,UAAW,CAGzE,GADkB,IAAIkH,IAAIC,YAAwBvP,OAAO2E,SAASiH,MACpD4D,SAAWxP,OAAO2E,SAAS6K,OAIvC,OAGFxP,OAAOG,iBAAiB,QAAQ,WAC9B,IAAMgO,EAAK,UAAMoB,YAAN,sBAEPzB,KAwEV,SAAiCK,EAAOC,GAEtC5G,MAAM2G,EAAO,CACXsB,QAAS,CAAE,iBAAkB,YAE5BnO,MAAK,SAAAoO,GAEJ,IAAMC,EAAcD,EAASD,QAAQG,IAAI,gBAEnB,MAApBF,EAASG,QACO,MAAfF,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5C1H,UAAUiG,cAAc0B,MAAMzO,MAAK,SAAAiN,GACjCA,EAAayB,aAAa1O,MAAK,WAC7BtB,OAAO2E,SAASC,eAKpBsJ,GAAgBC,EAAOC,MAG1BjG,OAAM,WACL1G,QAAQC,IACN,oEA/FAuO,CAAwB9B,EAAOC,GAI/BhG,UAAUiG,cAAc0B,MAAMzO,MAAK,WACjCG,QAAQC,IACN,qEAKJwM,GAAgBC,EAAOC,OC1B/B8B,K","file":"static/js/main.ed5c5920.chunk.js","sourcesContent":["const COUNTDOWN_TIME = {\r\n  hours: [],\r\n  minutes: [],\r\n  seconds: []\r\n};\r\n\r\nfor (let i = 0; i < 100; i++) {\r\n  COUNTDOWN_TIME.hours.push({ key: i, text: i, value: i * 60 * 60 });\r\n}\r\n\r\nfor (let i = 0; i < 60; i++) {\r\n  COUNTDOWN_TIME.minutes.push({ key: i, text: i, value: i * 60 });\r\n}\r\n\r\nfor (let i = 0; i < 60; i++) {\r\n  COUNTDOWN_TIME.seconds.push({ key: i, text: i, value: i });\r\n}\r\n\r\nexport default COUNTDOWN_TIME;\r\n","import React, { useState } from 'react';\r\nimport { Menu, Button } from 'semantic-ui-react';\r\n\r\nconst Header = () => {\r\n  const [promptEvent, setPromptEvent] = useState(null);\r\n  const [appAccepted, setAppAccepted] = useState(false);\r\n\r\n  let isAppInstalled = false;\r\n\r\n  if (window.matchMedia('(display-mode: standalone)').matches || appAccepted) {\r\n    isAppInstalled = true;\r\n  }\r\n\r\n  window.addEventListener('beforeinstallprompt', e => {\r\n    e.preventDefault();\r\n    setPromptEvent(e);\r\n  });\r\n\r\n  const installApp = () => {\r\n    promptEvent.prompt();\r\n    promptEvent.userChoice.then(result => {\r\n      if (result.outcome === 'accepted') {\r\n        setAppAccepted(true);\r\n        console.log('User accepted the A2HS prompt');\r\n      } else {\r\n        console.log('User dismissed the A2HS prompt');\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Menu stackable inverted size=\"massive\">\r\n      <Menu.Item header>\r\n        <h1 style={{ color: '#2185D0' }}>QuizApp</h1>\r\n      </Menu.Item>\r\n      {promptEvent && !isAppInstalled && (\r\n        <Menu.Item position=\"right\">\r\n          <Button\r\n            color=\"teal\"\r\n            icon=\"cloud download\"\r\n            labelPosition=\"left\"\r\n            content=\"Install App\"\r\n            onClick={installApp}\r\n          />\r\n        </Menu.Item>\r\n      )}\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Header from '../Header';\r\n\r\nconst Layout = ({ children }) => {\r\n  return (\r\n    <Fragment>\r\n      <Header />\r\n      <main>{children}</main>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node\r\n};\r\n\r\nexport default Layout;\r\n","import React from 'react';\r\nimport { Container, Message, Icon } from 'semantic-ui-react';\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <Container>\r\n      <Message icon size=\"big\">\r\n        <Icon name=\"circle notched\" loading />\r\n        <Message.Content>\r\n          <Message.Header>Just one second</Message.Header>\r\n          We are fetching that content for you.\r\n        </Message.Content>\r\n      </Message>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","export default __webpack_public_path__ + \"static/media/mind.525a3ae0.svg\";","const CATEGORIES = [\r\n  {\r\n    key: '0',\r\n    text: 'Any Category',\r\n    value: '0'\r\n  },\r\n  {\r\n    key: 9,\r\n    text: 'General Knowledge',\r\n    value: 9\r\n  },\r\n  {\r\n    key: 10,\r\n    text: 'Entertainment: Books',\r\n    value: 10\r\n  },\r\n  {\r\n    key: 11,\r\n    text: 'Entertainment: Films',\r\n    value: 11\r\n  },\r\n  {\r\n    key: 12,\r\n    text: 'Entertainment: Music',\r\n    value: 12\r\n  },\r\n  {\r\n    key: 13,\r\n    text: 'Entertainment: Musicals & Theatres',\r\n    value: 13\r\n  },\r\n  {\r\n    key: 14,\r\n    text: 'Entertainment: Television',\r\n    value: 14\r\n  },\r\n  {\r\n    key: 15,\r\n    text: 'Entertainment: Video Games',\r\n    value: 15\r\n  },\r\n  {\r\n    key: 16,\r\n    text: 'Entertainment: Board Games',\r\n    value: 16\r\n  },\r\n  {\r\n    key: 17,\r\n    text: 'Science & Nature',\r\n    value: 17\r\n  },\r\n  {\r\n    key: 18,\r\n    text: 'Science: Computers',\r\n    value: 18\r\n  },\r\n  {\r\n    key: 19,\r\n    text: 'Science: Mathematics',\r\n    value: 19\r\n  },\r\n  {\r\n    key: 20,\r\n    text: 'Mythology',\r\n    value: 20\r\n  },\r\n  {\r\n    key: 21,\r\n    text: 'Sports',\r\n    value: 21\r\n  },\r\n  {\r\n    key: 22,\r\n    text: 'Geography',\r\n    value: 22\r\n  },\r\n  {\r\n    key: 23,\r\n    text: 'History',\r\n    value: 23\r\n  },\r\n  {\r\n    key: 24,\r\n    text: 'Politics',\r\n    value: 24\r\n  },\r\n  {\r\n    key: 25,\r\n    text: 'Arts',\r\n    value: 25\r\n  },\r\n  {\r\n    key: 26,\r\n    text: 'Celebrities',\r\n    value: 26\r\n  },\r\n  {\r\n    key: 27,\r\n    text: 'Animals',\r\n    value: 27\r\n  },\r\n  {\r\n    key: 28,\r\n    text: 'Vehicles',\r\n    value: 28\r\n  },\r\n  {\r\n    key: 29,\r\n    text: 'Entertainment: Comics',\r\n    value: 29\r\n  },\r\n  {\r\n    key: 30,\r\n    text: 'Science: Gadgets',\r\n    value: 30\r\n  },\r\n  {\r\n    key: 31,\r\n    text: 'Entertainment: Japanese Anime & Manga',\r\n    value: 31\r\n  },\r\n  {\r\n    key: 32,\r\n    text: 'Entertainment: Cartoon & Animations',\r\n    value: 32\r\n  }\r\n];\r\n\r\nexport default CATEGORIES;\r\n","const NUM_OF_QUESTIONS = [];\r\n\r\nfor (let i = 1; i <= 50; i++) {\r\n  NUM_OF_QUESTIONS.push({ key: i, text: i, value: i });\r\n}\r\n\r\nexport default NUM_OF_QUESTIONS;\r\n","const DIFFICULTY = [\r\n  {\r\n    key: '0',\r\n    text: 'Any Difficulty',\r\n    value: '0'\r\n  },\r\n  {\r\n    key: 'easy',\r\n    text: 'Easy',\r\n    value: 'easy'\r\n  },\r\n  {\r\n    key: 'medium',\r\n    text: 'Medium',\r\n    value: 'medium'\r\n  },\r\n  {\r\n    key: 'hard',\r\n    text: 'Hard',\r\n    value: 'hard'\r\n  }\r\n];\r\n\r\nexport default DIFFICULTY;\r\n","const QUESTIONS_TYPE = [\r\n  {\r\n    key: '0',\r\n    text: 'Any Type',\r\n    value: '0'\r\n  },\r\n  {\r\n    key: 'multiple',\r\n    text: 'Multiple Choice',\r\n    value: 'multiple'\r\n  },\r\n  {\r\n    key: 'boolean',\r\n    text: 'True / False',\r\n    value: 'boolean'\r\n  }\r\n];\r\n\r\nexport default QUESTIONS_TYPE;\r\n","const calculateGrade = score => {\r\n\r\n  if ( score === null || score === undefined || typeof score !== 'number' ) {\r\n    return null;\r\n  }\r\n\r\n  const percentage = parseInt(score);\r\n\r\n  let grade = null;\r\n  let remarks = null;\r\n\r\n  if (percentage >= 97) {\r\n    grade = 'A+';\r\n  } else if (percentage >= 93 && percentage <= 96) {\r\n    grade = 'A';\r\n  } else if (percentage >= 90 && percentage <= 92) {\r\n    grade = 'A-';\r\n  } else if (percentage >= 87 && percentage <= 89) {\r\n    grade = 'B+';\r\n  } else if (percentage >= 83 && percentage <= 86) {\r\n    grade = 'B';\r\n  } else if (percentage >= 80 && percentage <= 82) {\r\n    grade = 'B-';\r\n  } else if (percentage >= 77 && percentage <= 79) {\r\n    grade = 'C+';\r\n  } else if (percentage >= 73 && percentage <= 76) {\r\n    grade = 'C';\r\n  } else if (percentage >= 70 && percentage <= 72) {\r\n    grade = 'C-';\r\n  } else if (percentage >= 67 && percentage <= 69) {\r\n    grade = 'D+';\r\n  } else if (percentage >= 63 && percentage <= 66) {\r\n    grade = 'D';\r\n  } else if (percentage >= 60 && percentage <= 62) {\r\n    grade = 'D-';\r\n  } else if (percentage < 60) {\r\n    grade = 'F';\r\n  }\r\n\r\n  if (score >= 60) {\r\n    remarks = 'Congratulations, YOU PASSED!';\r\n  } else {\r\n    remarks = 'Sorry, YOU FAILED!';\r\n  }\r\n\r\n  return {\r\n    grade,\r\n    remarks\r\n  };\r\n};\r\n\r\nexport default calculateGrade;\r\n","const calculateScore = (totalQuestions, correctAnswers) => {\r\n  if ( totalQuestions === 0 ) {\r\n    return 0\r\n  }\r\n  return Number(((correctAnswers * 100) / totalQuestions).toFixed(2));\r\n};\r\n\r\nexport default calculateScore;\r\n","const getLetter = number => {\r\n  let letter;\r\n\r\n  switch (number) {\r\n    case 0:\r\n      letter = 'A.';\r\n      break;\r\n    case 1:\r\n      letter = 'B.';\r\n      break;\r\n    case 2:\r\n      letter = 'C.';\r\n      break;\r\n    case 3:\r\n      letter = 'D.';\r\n      break;\r\n    default:\r\n      letter = null;\r\n      break;\r\n  }\r\n\r\n  return letter;\r\n};\r\n\r\nexport default getLetter;\r\n","const shuffle = array => {\r\n  array = [...array];\r\n\r\n  for (let i = array.length - 1; i > 0; i--) {\r\n    const j = Math.floor(Math.random() * (i + 1));\r\n    [array[i], array[j]] = [array[j], array[i]];\r\n  }\r\n\r\n  return array;\r\n};\r\n\r\nexport default shuffle;\r\n","const timeConverter = milliseconds => {\r\n  if ( milliseconds === null || milliseconds === undefined || typeof milliseconds !== 'number' ) {\r\n    return null;\r\n  }\r\n  const hours = `0${Math.floor(milliseconds / 3600000)}`.slice(-2);\r\n  const minutes = `0${Math.floor((milliseconds / 60000) % 60)}`.slice(-2);\r\n  const seconds = `0${Math.floor((milliseconds / 1000) % 60) % 60}`.slice(-2);\r\n\r\n  return {\r\n    hours,\r\n    minutes,\r\n    seconds\r\n  };\r\n};\r\n\r\nexport default timeConverter;\r\n","import React from 'react';\r\nimport { Container, Segment, Header, Icon } from 'semantic-ui-react';\r\n\r\nconst Offline = () => {\r\n  window.addEventListener('online', () => window.location.reload());\r\n\r\n  return (\r\n    <Container>\r\n      <Segment placeholder>\r\n        <Header icon>\r\n          <Icon name=\"unlink\" />\r\n          <h1>Offline</h1>\r\n          <p>\r\n            There is no Internet connection. We'll try to reload automatically\r\n            once you're back online!{' '}\r\n            <span role=\"img\" aria-label=\"signal\">\r\n              📶\r\n            </span>\r\n          </p>\r\n        </Header>\r\n      </Segment>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Offline;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Container,\r\n  Segment,\r\n  Item,\r\n  Dropdown,\r\n  Divider,\r\n  Button,\r\n  Message,\r\n} from 'semantic-ui-react';\r\n\r\nimport mindImg from '../../images/mind.svg';\r\n\r\nimport {\r\n  CATEGORIES,\r\n  NUM_OF_QUESTIONS,\r\n  DIFFICULTY,\r\n  QUESTIONS_TYPE,\r\n  COUNTDOWN_TIME,\r\n} from '../../constants';\r\nimport { shuffle } from '../../utils';\r\n\r\nimport Offline from '../Offline';\r\n\r\nconst Main = ({ startQuiz }) => {\r\n  const [category, setCategory] = useState('0');\r\n  const [numOfQuestions, setNumOfQuestions] = useState(5);\r\n  const [difficulty, setDifficulty] = useState('0');\r\n  const [questionsType, setQuestionsType] = useState('0');\r\n  const [countdownTime, setCountdownTime] = useState({\r\n    hours: 0,\r\n    minutes: 120,\r\n    seconds: 0,\r\n  });\r\n  const [processing, setProcessing] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [offline, setOffline] = useState(false);\r\n\r\n  const handleTimeChange = (e, { name, value }) => {\r\n    setCountdownTime({ ...countdownTime, [name]: value });\r\n  };\r\n\r\n  let allFieldsSelected = false;\r\n  if (\r\n    category &&\r\n    numOfQuestions &&\r\n    difficulty &&\r\n    questionsType &&\r\n    (countdownTime.hours || countdownTime.minutes || countdownTime.seconds)\r\n  ) {\r\n    allFieldsSelected = true;\r\n  }\r\n\r\n  const fetchData = () => {\r\n    setProcessing(true);\r\n\r\n    if (error) setError(null);\r\n\r\n    const API = `https://opentdb.com/api.php?amount=${numOfQuestions}&category=${category}&difficulty=${difficulty}&type=${questionsType}`;\r\n\r\n    fetch(API)\r\n      .then(respone => respone.json())\r\n      .then(data =>\r\n        setTimeout(() => {\r\n          const { response_code, results } = data;\r\n\r\n          if (response_code === 1) {\r\n            const message = (\r\n              <p>\r\n                The API doesn't have enough questions for your query. (Ex.\r\n                Asking for 50 Questions in a Category that only has 20.)\r\n                <br />\r\n                <br />\r\n                Please change the <strong>No. of Questions</strong>,{' '}\r\n                <strong>Difficulty Level</strong>, or{' '}\r\n                <strong>Type of Questions</strong>.\r\n              </p>\r\n            );\r\n\r\n            setProcessing(false);\r\n            setError({ message });\r\n\r\n            return;\r\n          }\r\n\r\n          results.forEach(element => {\r\n            element.options = shuffle([\r\n              element.correct_answer,\r\n              ...element.incorrect_answers,\r\n            ]);\r\n          });\r\n\r\n          setProcessing(false);\r\n          startQuiz(\r\n            results,\r\n            countdownTime.hours + countdownTime.minutes + countdownTime.seconds\r\n          );\r\n        }, 1000)\r\n      )\r\n      .catch(error =>\r\n        setTimeout(() => {\r\n          if (!navigator.onLine) {\r\n            setOffline(true);\r\n          } else {\r\n            setProcessing(false);\r\n            setError(error);\r\n          }\r\n        }, 1000)\r\n      );\r\n  };\r\n\r\n  if (offline) return <Offline />;\r\n\r\n  return (\r\n    <Container>\r\n      <Segment>\r\n        <Item.Group divided>\r\n          <Item>\r\n            <Item.Image src={mindImg} />\r\n            <Item.Content>\r\n              <Item.Header>\r\n                <h1>The Ultimate Trivia Quiz</h1>\r\n              </Item.Header>\r\n              {error && (\r\n                <Message error onDismiss={() => setError(null)}>\r\n                  <Message.Header>Error!</Message.Header>\r\n                  {error.message}\r\n                </Message>\r\n              )}\r\n              <Divider />\r\n              <Item.Meta>\r\n                <Dropdown\r\n                  fluid\r\n                  selection\r\n                  name=\"category\"\r\n                  placeholder=\"Select Quiz Category\"\r\n                  header=\"Select Quiz Category\"\r\n                  options={CATEGORIES}\r\n                  value={category}\r\n                  onChange={(e, { value }) => setCategory(value)}\r\n                  disabled={processing}\r\n                />\r\n                <br />\r\n                <Dropdown\r\n                  fluid\r\n                  selection\r\n                  name=\"numOfQ\"\r\n                  placeholder=\"Select No. of Questions\"\r\n                  header=\"Select No. of Questions\"\r\n                  options={NUM_OF_QUESTIONS}\r\n                  value={numOfQuestions}\r\n                  onChange={(e, { value }) => setNumOfQuestions(value)}\r\n                  disabled={processing}\r\n                />\r\n                <br />\r\n                <Dropdown\r\n                  fluid\r\n                  selection\r\n                  name=\"difficulty\"\r\n                  placeholder=\"Select Difficulty Level\"\r\n                  header=\"Select Difficulty Level\"\r\n                  options={DIFFICULTY}\r\n                  value={difficulty}\r\n                  onChange={(e, { value }) => setDifficulty(value)}\r\n                  disabled={processing}\r\n                />\r\n                <br />\r\n                <Dropdown\r\n                  fluid\r\n                  selection\r\n                  name=\"type\"\r\n                  placeholder=\"Select Questions Type\"\r\n                  header=\"Select Questions Type\"\r\n                  options={QUESTIONS_TYPE}\r\n                  value={questionsType}\r\n                  onChange={(e, { value }) => setQuestionsType(value)}\r\n                  disabled={processing}\r\n                />\r\n                <br />\r\n                <Dropdown\r\n                  search\r\n                  selection\r\n                  name=\"hours\"\r\n                  placeholder=\"Select Hours\"\r\n                  header=\"Select Hours\"\r\n                  options={COUNTDOWN_TIME.hours}\r\n                  value={countdownTime.hours}\r\n                  onChange={handleTimeChange}\r\n                  disabled={processing}\r\n                />\r\n                <Dropdown\r\n                  search\r\n                  selection\r\n                  name=\"minutes\"\r\n                  placeholder=\"Select Minutes\"\r\n                  header=\"Select Minutes\"\r\n                  options={COUNTDOWN_TIME.minutes}\r\n                  value={countdownTime.minutes}\r\n                  onChange={handleTimeChange}\r\n                  disabled={processing}\r\n                />\r\n                <Dropdown\r\n                  search\r\n                  selection\r\n                  name=\"seconds\"\r\n                  placeholder=\"Select Seconds\"\r\n                  header=\"Select Seconds\"\r\n                  options={COUNTDOWN_TIME.seconds}\r\n                  value={countdownTime.seconds}\r\n                  onChange={handleTimeChange}\r\n                  disabled={processing}\r\n                />\r\n              </Item.Meta>\r\n              <Divider />\r\n              <Item.Extra>\r\n                <Button\r\n                  primary\r\n                  size=\"big\"\r\n                  icon=\"play\"\r\n                  labelPosition=\"left\"\r\n                  content={processing ? 'Processing...' : 'Play Now'}\r\n                  onClick={fetchData}\r\n                  disabled={!allFieldsSelected || processing}\r\n                />\r\n              </Item.Extra>\r\n            </Item.Content>\r\n          </Item>\r\n        </Item.Group>\r\n      </Segment>\r\n      <br />\r\n    </Container>\r\n  );\r\n};\r\n\r\nMain.propTypes = {\r\n  startQuiz: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Main;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button, Popup } from 'semantic-ui-react';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { timeConverter } from '../../utils';\r\n\r\nconst Countdown = ({ countdownTime, timeOver, setTimeTaken }) => {\r\n  const totalTime = countdownTime * 1000;\r\n  const [timerTime, setTimerTime] = useState(totalTime);\r\n  const { hours, minutes, seconds } = timeConverter(timerTime);\r\n\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      const newTime = timerTime - 1000;\r\n\r\n      if (newTime >= 0) {\r\n        setTimerTime(newTime);\r\n      } else {\r\n        clearInterval(timer);\r\n\r\n        Swal.fire({\r\n          title: `Your Time's Up`,\r\n          icon: 'info',\r\n          timer: 5000,\r\n          willClose: () => timeOver(totalTime - timerTime)\r\n        });\r\n      }\r\n    }, 1000);\r\n\r\n    return () => {\r\n      clearInterval(timer);\r\n      setTimeTaken(totalTime - timerTime + 1000);\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, [timerTime]);\r\n\r\n  return (\r\n    <Button.Group size=\"massive\" basic floated=\"right\">\r\n      <Popup\r\n        content=\"Hours\"\r\n        trigger={<Button active>{hours}</Button>}\r\n        position=\"bottom left\"\r\n      />\r\n      <Popup\r\n        content=\"Minutes\"\r\n        trigger={<Button active>{minutes}</Button>}\r\n        position=\"bottom left\"\r\n      />\r\n      <Popup\r\n        content=\"Seconds\"\r\n        trigger={<Button active>{seconds}</Button>}\r\n        position=\"bottom left\"\r\n      />\r\n    </Button.Group>\r\n  );\r\n};\r\n\r\nCountdown.propTypes = {\r\n  countdownTime: PropTypes.number.isRequired,\r\n  timeOver: PropTypes.func.isRequired,\r\n  setTimeTaken: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Countdown;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Container,\r\n  Segment,\r\n  Item,\r\n  Divider,\r\n  Button,\r\n  Icon,\r\n  Message,\r\n  Menu,\r\n  Header\r\n} from 'semantic-ui-react';\r\nimport he from 'he';\r\n\r\nimport Countdown from '../Countdown';\r\nimport { getLetter } from '../../utils';\r\n\r\nconst Quiz = ({ data, countdownTime, endQuiz }) => {\r\n\r\n  const [questionIndex, setQuestionIndex] = useState(0);\r\n  const [correctAnswers, setCorrectAnswers] = useState(0);\r\n  const [userSlectedAns, setUserSlectedAns] = useState(null);\r\n  const [questionsAndAnswers, setQuestionsAndAnswers] = useState([]);\r\n  const [timeTaken, setTimeTaken] = useState(null);\r\n\r\n  const handleItemClick = (e, { name }) => {\r\n    setUserSlectedAns(name);\r\n  };\r\n\r\n  const handleNext = () => {\r\n    let point = 0;\r\n    if (userSlectedAns === he.decode(data[questionIndex].correct_answer)) {\r\n      point = 1;\r\n    }\r\n\r\n    const qna = questionsAndAnswers;\r\n    qna.push({\r\n      question: he.decode(data[questionIndex].question),\r\n      user_answer: userSlectedAns,\r\n      correct_answer: he.decode(data[questionIndex].correct_answer),\r\n      point\r\n    });\r\n\r\n    if (questionIndex === data.length - 1) {\r\n      return endQuiz({\r\n        totalQuestions: data.length,\r\n        correctAnswers: correctAnswers + point,\r\n        timeTaken,\r\n        questionsAndAnswers: qna\r\n      });\r\n    }\r\n\r\n    setCorrectAnswers(correctAnswers + point);\r\n    setQuestionIndex(questionIndex + 1);\r\n    setUserSlectedAns(null);\r\n    setQuestionsAndAnswers(qna);\r\n  };\r\n\r\n  const timeOver = timeTaken => {\r\n    return endQuiz({\r\n      totalQuestions: data.length,\r\n      correctAnswers,\r\n      timeTaken,\r\n      questionsAndAnswers\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Item.Header>\r\n      <Container>\r\n        <Segment>\r\n          <Item.Group divided>\r\n            <Item>\r\n              <Item.Content>\r\n                <Item.Extra>\r\n                  <Header as=\"h1\" block floated=\"left\">\r\n                    <Icon name=\"info circle\" />\r\n                    <Header.Content>\r\n                      {`Question No.${questionIndex + 1} of ${data.length}`}\r\n                    </Header.Content>\r\n                  </Header>\r\n                  <Countdown\r\n                    countdownTime={countdownTime}\r\n                    timeOver={timeOver}\r\n                    setTimeTaken={setTimeTaken}\r\n                  />\r\n                </Item.Extra>\r\n                <br />\r\n                <Item.Meta>\r\n                  <Message size=\"huge\" floating>\r\n                    <b>{`Q. ${he.decode(data[questionIndex].question)}`}</b>\r\n                  </Message>\r\n                  <br />\r\n                  <Item.Description>\r\n                    <h3>Please choose one of the following answers:</h3>\r\n                  </Item.Description>\r\n                  <Divider />\r\n                  <Menu vertical fluid size=\"massive\">\r\n                    {data[questionIndex].options.map((option, i) => {\r\n                      const letter = getLetter(i);\r\n                      const decodedOption = he.decode(option);\r\n\r\n                      return (\r\n                        <Menu.Item\r\n                          key={decodedOption}\r\n                          name={decodedOption}\r\n                          active={userSlectedAns === decodedOption}\r\n                          onClick={handleItemClick}\r\n                        >\r\n                          <b style={{ marginRight: '8px' }}>{letter}</b>\r\n                          {decodedOption}\r\n                        </Menu.Item>\r\n                      );\r\n                    })}\r\n                  </Menu>\r\n                </Item.Meta>\r\n                <Divider />\r\n                <Item.Extra>\r\n                  <Button\r\n                    primary\r\n                    content=\"Next\"\r\n                    onClick={handleNext}\r\n                    floated=\"right\"\r\n                    size=\"big\"\r\n                    icon=\"right chevron\"\r\n                    labelPosition=\"right\"\r\n                    disabled={!userSlectedAns}\r\n                  />\r\n                </Item.Extra>\r\n              </Item.Content>\r\n            </Item>\r\n          </Item.Group>\r\n        </Segment>\r\n        <br />\r\n      </Container>\r\n    </Item.Header>\r\n  );\r\n};\r\n\r\nQuiz.propTypes = {\r\n  data: PropTypes.array.isRequired,\r\n  countdownTime: PropTypes.number.isRequired,\r\n  endQuiz: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Quiz;\r\n","import React, { Fragment } from 'react';\r\nimport { Button, Icon, Modal } from 'semantic-ui-react';\r\n\r\nconst ShareButton = () => {\r\n  const handleClick = () => {\r\n    navigator\r\n      .share({\r\n        title: document.title,\r\n        text: 'Check out this quiz app — it rocks!',\r\n        url: 'https://safdarjamal.github.io/quiz-app/'\r\n      })\r\n      .then(() => console.log('Successfully shared'))\r\n      .catch(error => console.log(error.message));\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {navigator.share ? (\r\n        <Button\r\n          title=\"Share\"\r\n          floated=\"right\"\r\n          size=\"big\"\r\n          circular\r\n          icon=\"share alternate\"\r\n          onClick={handleClick}\r\n        />\r\n      ) : (\r\n        <Modal\r\n          closeIcon\r\n          size=\"tiny\"\r\n          trigger={\r\n            <Button\r\n              title=\"Share\"\r\n              floated=\"right\"\r\n              size=\"big\"\r\n              circular\r\n              icon=\"share alternate\"\r\n            />\r\n          }\r\n        >\r\n          <Modal.Header className=\"ui center aligned\">Share on</Modal.Header>\r\n          <Modal.Content className=\"ui center aligned container\">\r\n            <a\r\n              href=\"https://www.facebook.com/sharer.php?u=https%3A//safdarjamal.github.io/quiz-app/\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              <Button color=\"facebook\" size=\"big\" style={{ marginBottom: 8 }}>\r\n                <Icon name=\"facebook\" />\r\n                Facebook\r\n              </Button>\r\n            </a>\r\n            <a\r\n              href=\"https://twitter.com/intent/tweet?url=https%3A//safdarjamal.github.io/quiz-app/&text=Check%20out%20this%20quiz%20app%20—%20it%20rocks!&via=_safdarjamal\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              <Button color=\"twitter\" size=\"big\" style={{ marginBottom: 8 }}>\r\n                <Icon name=\"twitter\" />\r\n                Twitter\r\n              </Button>\r\n            </a>\r\n            <a\r\n              href=\"https://www.linkedin.com/shareArticle?mini=true&url=https%3A%2F%2Fsafdarjamal.github.io%2Fquiz-app%2F\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              <Button color=\"linkedin\" size=\"big\">\r\n                <Icon name=\"linkedin\" />\r\n                LinkedIn\r\n              </Button>\r\n            </a>\r\n          </Modal.Content>\r\n        </Modal>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ShareButton;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Segment, Header, Button } from 'semantic-ui-react';\r\n\r\nimport ShareButton from '../ShareButton';\r\nimport { calculateScore, calculateGrade, timeConverter } from '../../utils';\r\n\r\nconst Stats = ({\r\n  totalQuestions,\r\n  correctAnswers,\r\n  timeTaken,\r\n  replayQuiz,\r\n  resetQuiz\r\n}) => {\r\n  const score = calculateScore(totalQuestions, correctAnswers);\r\n  const { grade, remarks } = calculateGrade(score);\r\n  const { hours, minutes, seconds } = timeConverter(timeTaken);\r\n\r\n  return (\r\n    <Segment>\r\n      <Header as=\"h1\" textAlign=\"center\" block>\r\n        {remarks}\r\n      </Header>\r\n      <Header as=\"h2\" textAlign=\"center\" block>\r\n        Grade: {grade}\r\n      </Header>\r\n      <Header as=\"h3\" textAlign=\"center\" block>\r\n        Total Questions: {totalQuestions}\r\n      </Header>\r\n      <Header as=\"h3\" textAlign=\"center\" block>\r\n        Correct Answers: {correctAnswers}\r\n      </Header>\r\n      <Header as=\"h3\" textAlign=\"center\" block>\r\n        Your Score: {score}%\r\n      </Header>\r\n      <Header as=\"h3\" textAlign=\"center\" block>\r\n        Passing Score: 60%\r\n      </Header>\r\n      <Header as=\"h3\" textAlign=\"center\" block>\r\n        Time Taken:{' '}\r\n        {`${Number(hours)}h ${Number(minutes)}m ${Number(seconds)}s`}\r\n      </Header>\r\n      <div style={{ marginTop: 35 }}>\r\n        <Button\r\n          primary\r\n          content=\"Play Again\"\r\n          onClick={replayQuiz}\r\n          size=\"big\"\r\n          icon=\"redo\"\r\n          labelPosition=\"left\"\r\n          style={{ marginRight: 15, marginBottom: 8 }}\r\n        />\r\n        <Button\r\n          color=\"teal\"\r\n          content=\"Back to Home\"\r\n          onClick={resetQuiz}\r\n          size=\"big\"\r\n          icon=\"home\"\r\n          labelPosition=\"left\"\r\n          style={{ marginBottom: 8 }}\r\n        />\r\n        <ShareButton />\r\n      </div>\r\n    </Segment>\r\n  );\r\n};\r\n\r\nStats.propTypes = {\r\n  totalQuestions: PropTypes.number.isRequired,\r\n  correctAnswers: PropTypes.number.isRequired,\r\n  timeTaken: PropTypes.number.isRequired,\r\n  replayQuiz: PropTypes.func.isRequired,\r\n  resetQuiz: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Stats;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Table } from 'semantic-ui-react';\r\n\r\nconst QNA = ({ questionsAndAnswers }) => {\r\n  return (\r\n    <Table celled striped selectable size=\"large\">\r\n      <Table.Header>\r\n        <Table.Row>\r\n          <Table.HeaderCell>No.</Table.HeaderCell>\r\n          <Table.HeaderCell>Questions</Table.HeaderCell>\r\n          <Table.HeaderCell>Your Answers</Table.HeaderCell>\r\n          <Table.HeaderCell>Correct Answers</Table.HeaderCell>\r\n          <Table.HeaderCell>Points</Table.HeaderCell>\r\n        </Table.Row>\r\n      </Table.Header>\r\n      <Table.Body>\r\n        {questionsAndAnswers.map((item, i) => (\r\n          <Table.Row key={i + 1}>\r\n            <Table.Cell>{i + 1}</Table.Cell>\r\n            <Table.Cell>{item.question}</Table.Cell>\r\n            <Table.Cell>{item.user_answer}</Table.Cell>\r\n            <Table.Cell>{item.correct_answer}</Table.Cell>\r\n            <Table.Cell>{item.point}</Table.Cell>\r\n          </Table.Row>\r\n        ))}\r\n      </Table.Body>\r\n    </Table>\r\n  );\r\n};\r\n\r\nQNA.propTypes = {\r\n  questionsAndAnswers: PropTypes.array.isRequired\r\n};\r\n\r\nexport default QNA;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Container, Menu } from 'semantic-ui-react';\r\n\r\nimport Stats from './Stats';\r\nimport QNA from './QNA';\r\n\r\nconst Result = ({\r\n  totalQuestions,\r\n  correctAnswers,\r\n  timeTaken,\r\n  questionsAndAnswers,\r\n  replayQuiz,\r\n  resetQuiz\r\n}) => {\r\n  const [activeTab, setActiveTab] = useState('Stats');\r\n\r\n  const handleTabClick = (e, { name }) => {\r\n    setActiveTab(name);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Menu fluid widths={2}>\r\n        <Menu.Item\r\n          name=\"Stats\"\r\n          active={activeTab === 'Stats'}\r\n          onClick={handleTabClick}\r\n        />\r\n        <Menu.Item\r\n          name=\"QNA\"\r\n          active={activeTab === 'QNA'}\r\n          onClick={handleTabClick}\r\n        />\r\n      </Menu>\r\n      {activeTab === 'Stats' && (\r\n        <Stats\r\n          totalQuestions={totalQuestions}\r\n          correctAnswers={correctAnswers}\r\n          timeTaken={timeTaken}\r\n          replayQuiz={replayQuiz}\r\n          resetQuiz={resetQuiz}\r\n        />\r\n      )}\r\n      {activeTab === 'QNA' && <QNA questionsAndAnswers={questionsAndAnswers} />}\r\n      <br />\r\n    </Container>\r\n  );\r\n};\r\n\r\nResult.propTypes = {\r\n  totalQuestions: PropTypes.number.isRequired,\r\n  correctAnswers: PropTypes.number.isRequired,\r\n  timeTaken: PropTypes.number.isRequired,\r\n  questionsAndAnswers: PropTypes.array.isRequired,\r\n  replayQuiz: PropTypes.func.isRequired,\r\n  resetQuiz: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Result;\r\n","import React, { useState } from 'react';\r\n\r\nimport Layout from '../Layout';\r\nimport Loader from '../Loader';\r\nimport Main from '../Main';\r\nimport Quiz from '../Quiz';\r\nimport Result from '../Result';\r\n\r\nimport { shuffle } from '../../utils';\r\n\r\nconst App = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [data, setData] = useState(null);\r\n  const [countdownTime, setCountdownTime] = useState(null);\r\n  const [isQuizStarted, setIsQuizStarted] = useState(false);\r\n  const [isQuizCompleted, setIsQuizCompleted] = useState(false);\r\n  const [resultData, setResultData] = useState(null);\r\n\r\n  const startQuiz = (data, countdownTime) => {\r\n    setLoading(true);\r\n    setCountdownTime(countdownTime);\r\n\r\n    setTimeout(() => {\r\n      setData(data);\r\n      setIsQuizStarted(true);\r\n      setLoading(false);\r\n    }, 1000);\r\n  };\r\n\r\n  const endQuiz = resultData => {\r\n    setLoading(true);\r\n\r\n    setTimeout(() => {\r\n      setIsQuizStarted(false);\r\n      setIsQuizCompleted(true);\r\n      setResultData(resultData);\r\n      setLoading(false);\r\n    }, 2000);\r\n  };\r\n\r\n  const replayQuiz = () => {\r\n    setLoading(true);\r\n\r\n    const shuffledData = shuffle(data);\r\n    shuffledData.forEach(element => {\r\n      element.options = shuffle(element.options);\r\n    });\r\n\r\n    setData(shuffledData);\r\n\r\n    setTimeout(() => {\r\n      setIsQuizStarted(true);\r\n      setIsQuizCompleted(false);\r\n      setResultData(null);\r\n      setLoading(false);\r\n    }, 1000);\r\n  };\r\n\r\n  const resetQuiz = () => {\r\n    setLoading(true);\r\n\r\n    setTimeout(() => {\r\n      setData(null);\r\n      setCountdownTime(null);\r\n      setIsQuizStarted(false);\r\n      setIsQuizCompleted(false);\r\n      setResultData(null);\r\n      setLoading(false);\r\n    }, 1000);\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      {loading && <Loader />}\r\n      {!loading && !isQuizStarted && !isQuizCompleted && (\r\n        <Main startQuiz={startQuiz} />\r\n      )}\r\n      {!loading && isQuizStarted && (\r\n        <Quiz data={data} countdownTime={countdownTime} endQuiz={endQuiz} />\r\n      )}\r\n      {!loading && isQuizCompleted && (\r\n        <Result {...resultData} replayQuiz={replayQuiz} resetQuiz={resetQuiz} />\r\n      )}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import Swal from 'sweetalert2';\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service worker.'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              Swal.fire({\r\n                toast: 'true',\r\n                position: 'bottom',\r\n                icon: 'success',\r\n                title: 'App is ready to work offline.',\r\n                showConfirmButton: false,\r\n                timer: 6000\r\n              });\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorkerRegistration.register();\r\n"],"sourceRoot":""}